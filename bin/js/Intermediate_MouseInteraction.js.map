{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/Intermediate_MouseInteraction.ts",
    "Intermediate_MouseInteraction.js"
  ],
  "names": [
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./src/Intermediate_MouseInteraction.ts",
    "module",
    "BitmapImage2D",
    "AssetEvent",
    "Vector3D",
    "AssetLibrary",
    "URLRequest",
    "RequestAnimationFrame",
    "Keyboard",
    "View",
    "HoverController",
    "BoundsType",
    "LineSegment",
    "Mesh",
    "PointLight",
    "AwayMouseEvent",
    "BasicMaterial",
    "StaticLightPicker",
    "RaycastPicker",
    "JSPickingCollider",
    "PrimitiveCubePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveSpherePrefab",
    "PrimitiveTorusPrefab",
    "Single2DTexture",
    "DefaultRenderer",
    "MethodMaterial",
    "OBJParser",
    "Intermediate_MouseInteraction",
    "this",
    "_time",
    "_raycastPicker",
    "_move",
    "_tiltSpeed",
    "_panSpeed",
    "_distanceSpeed",
    "_tiltIncrement",
    "_panIncrement",
    "_distanceIncrement",
    "init",
    "prototype",
    "initEngine",
    "initLights",
    "initMaterials",
    "initObjects",
    "initListeners",
    "_renderer",
    "_view",
    "forceMouseMove",
    "_scene",
    "scene",
    "_camera",
    "camera",
    "mousePicker",
    "_cameraController",
    "_pointLight",
    "addChild",
    "_lightPicker",
    "_whiteMaterial",
    "lightPicker",
    "_blackMaterial",
    "_grayMaterial",
    "_blueMaterial",
    "_redMaterial",
    "_this",
    "_pickingPositionTracer",
    "getNewObject",
    "material",
    "visible",
    "mouseEnabled",
    "mouseChildren",
    "_scenePositionTracer",
    "_pickingNormalTracer",
    "_sceneNormalTracer",
    "_token",
    "load",
    "addEventListener",
    "ASSET_COMPLETE",
    "event",
    "onAssetComplete",
    "createABunchOfObjects",
    "setIgnoreList",
    "onlyMouseEnabled",
    "asset",
    "isAsset",
    "initializeHeadModel",
    "model",
    "_head",
    "bmd",
    "PAINT_TEXTURE_SIZE",
    "bitmapTexture",
    "textureMaterial",
    "pickingCollider",
    "enableMeshMouseListeners",
    "_cubePrefab",
    "_spherePrefab",
    "_cylinderPrefab",
    "_torusPrefab",
    "object",
    "createSimpleObject",
    "rotationZ",
    "Math",
    "random",
    "azimuth",
    "PI",
    "elevation",
    "x",
    "cos",
    "sin",
    "y",
    "z",
    "mesh",
    "boundsType",
    "randGeometry",
    "SPHERE",
    "usesTriangleCollider",
    "isMouseEnabled",
    "listensToMouseEvents",
    "choseMeshMaterial",
    "hasEventListener",
    "MOUSE_MOVE",
    "window",
    "onresize",
    "onResize",
    "document",
    "onmousedown",
    "onMouseDown",
    "onmouseup",
    "onMouseUp",
    "onmousemove",
    "onMouseMove",
    "onmousewheel",
    "onMouseWheel",
    "onkeydown",
    "onKeyDown",
    "onkeyup",
    "onKeyUp",
    "_timer",
    "onEnterFrame",
    "start",
    "dt",
    "transform",
    "position",
    "collidingObject",
    "getSceneCollision",
    "forwardVector",
    "_previoiusCollidingObject",
    "displayObject",
    "sceneTransform",
    "transformVector",
    "localPosition",
    "normal",
    "deltaTransformVector",
    "localNormal",
    "normalize",
    "scaleBy",
    "endPosition",
    "clone",
    "render",
    "keyCode",
    "UP",
    "W",
    "DOWN",
    "S",
    "LEFT",
    "A",
    "RIGHT",
    "D",
    "Z",
    "X",
    "MOUSE_OVER",
    "onMeshMouseOver",
    "MOUSE_OUT",
    "onMeshMouseOut",
    "onMeshMouseMove",
    "MOUSE_DOWN",
    "onMeshMouseDown",
    "debugVisible",
    "scenePosition",
    "sceneNormal",
    "_lastPanAngle",
    "panAngle",
    "_lastTiltAngle",
    "tiltAngle",
    "_lastMouseX",
    "clientX",
    "_lastMouseY",
    "clientY",
    "distance",
    "wheelDelta",
    "width",
    "innerWidth",
    "height",
    "innerHeight",
    "onload",
    "awayjs-core/lib/data/BitmapImage2D",
    "undefined",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/library/AssetLibrary",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/ui/Keyboard",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/containers/View",
    "awayjs-display/lib/controllers/HoverController",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "awayjs-display/lib/pick/JSPickingCollider",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-parsers/lib/OBJParser",
    "awayjs-renderergl/lib/DefaultRenderer"
  ],
  "mappings": "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",
  "file": "Intermediate_MouseInteraction.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/*\n\nShading example in Away3d\n\nDemonstrates:\n\nHow to create multiple entitiesources in a scene.\nHow to apply specular maps, normals maps and diffuse texture maps to a material.\n\nCode by Rob Bateman\nrob@infiniteturtles.co.uk\nhttp://www.infiniteturtles.co.uk\n\nThis code is distributed under the MIT License\n\nCopyright (c) The Away Foundation http://www.theawayfoundation.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetLibrary\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport Keyboard\t\t\t\t\t\t= require(\"awayjs-core/lib/ui/Keyboard\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport HoverController\t\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport JSPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/JSPickingCollider\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\nimport PrimitiveCylinderPrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\nimport PrimitiveTorusPrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nimport DefaultRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\n\nimport MethodMaterial\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\n\nimport OBJParser\t\t\t\t\t= require(\"awayjs-parsers/lib/OBJParser\");\n\n/**\n *\n */\nclass Intermediate_MouseInteraction\n{\n\t//engine variables\n\tprivate _scene:Scene;\n\tprivate _camera:Camera;\n\tprivate _renderer:DefaultRenderer;\n\tprivate _view:View;\n\tprivate _token:AssetLoaderToken;\n\tprivate _cameraController:HoverController;\n\n\tprivate _timer:RequestAnimationFrame;\n\tprivate _time:number = 0;\n\n\t//material objects\n\t//private _painter:Sprite;\n\tprivate _blackMaterial:MethodMaterial;\n\tprivate _whiteMaterial:MethodMaterial;\n\tprivate _grayMaterial:MethodMaterial;\n\tprivate _blueMaterial:MethodMaterial;\n\tprivate _redMaterial:MethodMaterial;\n\n\t//light objects\n\tprivate _pointLight:PointLight;\n\tprivate _lightPicker:StaticLightPicker;\n\n\t//scene objects\n\tprivate _pickingPositionTracer:Mesh;\n\tprivate _scenePositionTracer:Mesh;\n\tprivate _pickingNormalTracer:LineSegment;\n\tprivate _sceneNormalTracer:LineSegment;\n\tprivate _previoiusCollidingObject:PickingCollisionVO;\n\tprivate _raycastPicker:RaycastPicker = new RaycastPicker(false);\n\tprivate _head:Mesh;\n\tprivate _cubePrefab:PrimitiveCubePrefab;\n\tprivate _spherePrefab:PrimitiveSpherePrefab;\n\tprivate _cylinderPrefab:PrimitiveCylinderPrefab;\n\tprivate _torusPrefab:PrimitiveTorusPrefab;\n\n\t//navigation variables\n\tprivate _move:boolean = false;\n\tprivate _lastPanAngle:number;\n\tprivate _lastTiltAngle:number;\n\tprivate _lastMouseX:number;\n\tprivate _lastMouseY:number;\n\tprivate _tiltSpeed:number = 4;\n\tprivate _panSpeed:number = 4;\n\tprivate _distanceSpeed:number = 4;\n\tprivate _tiltIncrement:number = 0;\n\tprivate _panIncrement:number = 0;\n\tprivate _distanceIncrement:number = 0;\n\n\tprivate static PAINT_TEXTURE_SIZE:number = 1024;\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Global initialise function\n\t */\n\tprivate init():void\n\t{\n\t\tthis.initEngine();\n\t\tthis.initLights();\n\t\tthis.initMaterials();\n\t\tthis.initObjects();\n\t\tthis.initListeners();\n\t}\n\n\t/**\n\t * Initialise the engine\n\t */\n\tprivate initEngine():void\n\t{\n\t\tthis._renderer = new DefaultRenderer();\n\t\tthis._view = new View(this._renderer);\n\t\tthis._view.forceMouseMove = true;\n\t\tthis._scene = this._view.scene;\n\t\tthis._camera = this._view.camera;\n\t\tthis._view.mousePicker = new RaycastPicker(true);\n\n\t\t//setup controller to be used on the camera\n\t\tthis._cameraController = new HoverController(this._camera, null, 180, 20, 320, 5);\n\t}\n\n\t/**\n\t * Initialise the lights\n\t */\n\tprivate initLights():void\n\t{\n\t\t//create a light for the camera\n\t\tthis._pointLight = new PointLight();\n\t\tthis._scene.addChild(this._pointLight);\n\t\tthis._lightPicker = new StaticLightPicker([this._pointLight]);\n\t}\n\n\t/**\n\t * Initialise the material\n\t */\n\tprivate initMaterials():void\n\t{\n\t\t// uv painter\n\t\t//this._painter = new Sprite();\n\t\t//this._painter.graphics.beginFill( 0xFF0000 );\n\t\t//this._painter.graphics.drawCircle( 0, 0, 10 );\n\t\t//this._painter.graphics.endFill();\n\n\t\t// locator materials\n\t\tthis._whiteMaterial = new MethodMaterial( 0xFFFFFF );\n\t\tthis._whiteMaterial.lightPicker = this._lightPicker;\n\t\tthis._blackMaterial = new MethodMaterial( 0x333333 );\n\t\tthis._blackMaterial.lightPicker = this._lightPicker;\n\t\tthis._grayMaterial = new MethodMaterial( 0xCCCCCC );\n\t\tthis._grayMaterial.lightPicker = this._lightPicker;\n\t\tthis._blueMaterial = new MethodMaterial( 0x0000FF );\n\t\tthis._blueMaterial.lightPicker = this._lightPicker;\n\t\tthis._redMaterial = new MethodMaterial( 0xFF0000 );\n\t\tthis._redMaterial.lightPicker = this._lightPicker;\n\t}\n\n\t/**\n\t * Initialise the scene objects\n\t */\n\tprivate initObjects():void\n\t{\n\t\t// To trace mouse hit position.\n\t\tthis._pickingPositionTracer = <Mesh> new PrimitiveSpherePrefab(2).getNewObject();\n\t\tthis._pickingPositionTracer.material = new MethodMaterial(0x00FF00, 0.5);\n\t\tthis._pickingPositionTracer.visible = false;\n\t\tthis._pickingPositionTracer.mouseEnabled = false;\n\t\tthis._pickingPositionTracer.mouseChildren = false;\n\t\tthis._scene.addChild(this._pickingPositionTracer);\n\n\t\tthis._scenePositionTracer = <Mesh> new PrimitiveSpherePrefab(2).getNewObject();\n\t\tthis._pickingPositionTracer.material = new MethodMaterial(0x0000FF, 0.5);\n\t\tthis._scenePositionTracer.visible = false;\n\t\tthis._scenePositionTracer.mouseEnabled = false;\n\t\tthis._scene.addChild(this._scenePositionTracer);\n\n\n\t\t// To trace picking normals.\n\t\tthis._pickingNormalTracer = new LineSegment(new BasicMaterial(0xFFFFFF), new Vector3D(), new Vector3D(), 3);\n\t\tthis._pickingNormalTracer.mouseEnabled = false;\n\t\tthis._pickingNormalTracer.visible = false;\n\t\tthis._view.scene.addChild(this._pickingNormalTracer);\n\n\t\tthis._sceneNormalTracer = new LineSegment(new BasicMaterial(0xFFFFFF), new Vector3D(), new Vector3D(), 3);\n\t\tthis._sceneNormalTracer.mouseEnabled = false;\n\t\tthis._sceneNormalTracer.visible = false;\n\t\tthis._view.scene.addChild(this._sceneNormalTracer);\n\n\n\t\t// Load a head model that we will be able to paint on on mouse down.\n\t\tthis._token = AssetLibrary.load(new URLRequest('assets/head.obj'), null, null, new OBJParser( 25 ));\n\t\tthis._token.addEventListener(AssetEvent.ASSET_COMPLETE, (event:AssetEvent) => this.onAssetComplete(event));\n\n\t\t// Produce a bunch of objects to be around the scene.\n\t\tthis.createABunchOfObjects();\n\n\t\tthis._raycastPicker.setIgnoreList([this._sceneNormalTracer, this._scenePositionTracer]);\n\t\tthis._raycastPicker.onlyMouseEnabled = false;\n\t}\n\n\t/**\n\t * Listener for asset complete event on loader\n\t */\n\tprivate onAssetComplete(event:AssetEvent):void\n\t{\n\t\tif (event.asset.isAsset(Mesh)) {\n\t\t\tthis.initializeHeadModel(<Mesh> event.asset);\n\t\t}\n\t}\n\n\tprivate initializeHeadModel( model:Mesh ):void\n\t{\n\t\tthis._head = model;\n\n\t\t// Apply a bitmap material that can be painted on.\n\t\tvar bmd:BitmapImage2D = new BitmapImage2D(Intermediate_MouseInteraction.PAINT_TEXTURE_SIZE, Intermediate_MouseInteraction.PAINT_TEXTURE_SIZE, false, 0xCCCCCC);\n\t\t//bmd.perlinNoise(50, 50, 8, 1, false, true, 7, true);\n\t\tvar bitmapTexture:Single2DTexture = new Single2DTexture(bmd);\n\t\tvar textureMaterial:MethodMaterial = new MethodMaterial(bitmapTexture);\n\t\ttextureMaterial.lightPicker = this._lightPicker;\n\t\tmodel.material = textureMaterial;\n\t\tmodel.pickingCollider = new JSPickingCollider();\n\n\t\t// Apply mouse interactivity.\n\t\tmodel.mouseEnabled = model.mouseChildren = true;\n\t\tthis.enableMeshMouseListeners(model);\n\n\t\tthis._view.scene.addChild(model);\n\t}\n\n\tprivate createABunchOfObjects():void\n\t{\n\t\tthis._cubePrefab = new PrimitiveCubePrefab( 25, 50, 25 );\n\t\tthis._spherePrefab = new PrimitiveSpherePrefab(12);\n\t\tthis._cylinderPrefab = new PrimitiveCylinderPrefab( 12, 12, 25 );\n\t\tthis._torusPrefab = new PrimitiveTorusPrefab( 12, 12 );\n\n\t\tfor(var i:number = 0; i < 40; i++) {\n\n\t\t\t// Create object.\n\t\t\tvar object:Mesh = this.createSimpleObject();\n\n\t\t\t// Random orientation.\n\t\t\t//object.rotationX = 360*Math.random();\n\t\t\t//object.rotationY = 360*Math.random();\n\t\t\tobject.rotationZ = 360*Math.random();\n\n\t\t\t// Random position.\n\t\t\tvar r:number = 200 + 100*Math.random();\n\t\t\tvar azimuth:number = 2*Math.PI*Math.random();\n\t\t\tvar elevation:number = 0.25 * Math.PI*Math.random();\n\t\t\tobject.x = r*Math.cos(elevation)*Math.sin(azimuth);\n\t\t\tobject.y = r*Math.sin(elevation);\n\t\t\tobject.z = r*Math.cos(elevation)*Math.cos(azimuth);\n\t\t}\n\t}\n\n\tprivate createSimpleObject():Mesh\n\t{\n\n\t\tvar mesh:Mesh;\n\t\tvar boundsType:string;\n\n\t\t// Chose a random mesh.\n\t\tvar randGeometry:number = Math.random();\n\t\tif( randGeometry > 0.75 ) {\n\t\t\tmesh = <Mesh> this._cubePrefab.getNewObject();\n\t\t}\n\t\telse if( randGeometry > 0.5 ) {\n\t\t\tmesh = <Mesh> this._spherePrefab.getNewObject();\n\t\t\tboundsType = BoundsType.SPHERE; // better on spherical meshes with bound picking colliders\n\t\t}\n\t\telse if( randGeometry > 0.25 ) {\n\t\t\tmesh = <Mesh> this._cylinderPrefab.getNewObject();\n\n\t\t}\n\t\telse {\n\t\t\tmesh = <Mesh> this._torusPrefab.getNewObject();\n\t\t}\n\n\t\tif (boundsType)\n\t\t\tmesh.boundsType = boundsType;\n\n\t\t// Randomly decide if the mesh has a triangle collider.\n\t\tvar usesTriangleCollider:boolean = Math.random() > 0.5;\n\t\tif( usesTriangleCollider ) {\n\t\t\t// AS3 triangle pickers for meshes with low poly counts are faster than pixel bender ones.\n\t\t\t//\t\t\t\tmesh.pickingCollider = PickingColliderType.BOUNDS_ONLY; // this is the default value for all meshes\n\t\t\tmesh.pickingCollider = new JSPickingCollider();\n\t\t\t//\t\t\t\tmesh.pickingCollider = PickingColliderType.AS3_BEST_HIT; // slower and more accurate, best for meshes with folds\n\t\t\t//\t\t\t\tmesh.pickingCollider = PickingColliderType.AUTO_FIRST_ENCOUNTERED; // automatically decides when to use pixel bender or actionscript\n\t\t}\n\n\t\t// Enable mouse interactivity?\n\t\tvar isMouseEnabled:boolean = Math.random() > 0.25;\n\t\tmesh.mouseEnabled = mesh.mouseChildren = isMouseEnabled;\n\n\t\t// Enable mouse listeners?\n\t\tvar listensToMouseEvents:boolean = Math.random() > 0.25;\n\t\tif( isMouseEnabled && listensToMouseEvents ) {\n\t\t\tthis.enableMeshMouseListeners(mesh);\n\t\t}\n\n\t\t// Apply material according to the random setup of the object.\n\t\tthis.choseMeshMaterial(mesh);\n\n\t\t// Add to scene and store.\n\t\tthis._view.scene.addChild(mesh);\n\n\t\treturn mesh;\n\t}\n\n\tprivate choseMeshMaterial(mesh:Mesh):void\n\t{\n\t\tif( !mesh.mouseEnabled ) {\n\t\t\tmesh.material = this._blackMaterial;\n\t\t}\n\t\telse {\n\t\t\tif( !mesh.hasEventListener( AwayMouseEvent.MOUSE_MOVE ) ) {\n\t\t\t\tmesh.material = this._grayMaterial;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( mesh.pickingCollider != null ) {\n\t\t\t\t\tmesh.material = this._redMaterial;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmesh.material = this._blueMaterial;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Initialise the listeners\n\t */\n\tprivate initListeners():void\n\t{\n\t\twindow.onresize  = (event:UIEvent) => this.onResize(event);\n\n\t\tdocument.onmousedown = (event:MouseEvent) => this.onMouseDown(event);\n\t\tdocument.onmouseup = (event:MouseEvent) => this.onMouseUp(event);\n\t\tdocument.onmousemove = (event:MouseEvent) => this.onMouseMove(event);\n\t\tdocument.onmousewheel = (event:MouseWheelEvent) => this.onMouseWheel(event);\n\t\tdocument.onkeydown = (event:KeyboardEvent) => this.onKeyDown(event);\n\t\tdocument.onkeyup = (event:KeyboardEvent) => this.onKeyUp(event);\n\n\t\tthis.onResize();\n\n\t\tthis._timer = new RequestAnimationFrame(this.onEnterFrame, this);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * Navigation and render loop\n\t */\n\tprivate onEnterFrame(dt:number):void\n\t{\n\t\t// Move light with camera.\n\t\tthis._pointLight.transform.position = this._camera.transform.position;\n\n\t\tvar collidingObject:PickingCollisionVO = this._raycastPicker.getSceneCollision(this._camera.transform.position, this._view.camera.transform.forwardVector, this._view.scene);\n\t\t//var mesh:Mesh;\n\n\t\tif (this._previoiusCollidingObject && this._previoiusCollidingObject != collidingObject) { //equivalent to mouse out\n\t\t\tthis._scenePositionTracer.visible = this._sceneNormalTracer.visible = false;\n\t\t\tthis._scenePositionTracer.transform.position = new Vector3D();\n\t\t}\n\n\t\tif (collidingObject) {\n\t\t\t// Show tracers.\n\t\t\tthis._scenePositionTracer.visible = this._sceneNormalTracer.visible = true;\n\n\t\t\t// Update position tracer.\n\t\t\tthis._scenePositionTracer.transform.position = collidingObject.displayObject.sceneTransform.transformVector(collidingObject.localPosition);\n\n\t\t\t// Update normal tracer.\n\t\t\tthis._sceneNormalTracer.transform.position = this._scenePositionTracer.transform.position;\n\t\t\tvar normal:Vector3D = collidingObject.displayObject.sceneTransform.deltaTransformVector(collidingObject.localNormal);\n\t\t\tnormal.normalize();\n\t\t\tnormal.scaleBy( 25 );\n\t\t\tthis._sceneNormalTracer.endPosition = normal.clone();\n\t\t}\n\n\n\t\tthis._previoiusCollidingObject = collidingObject;\n\n\t\t// Render 3D.\n\t\tthis._view.render();\n\t}\n\n\t/**\n\t * Key down listener for camera control\n\t */\n\tprivate onKeyDown(event:KeyboardEvent):void\n\t{\n\t\tswitch (event.keyCode) {\n\t\t\tcase Keyboard.UP:\n\t\t\tcase Keyboard.W:\n\t\t\t\tthis._tiltIncrement = this._tiltSpeed;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.DOWN:\n\t\t\tcase Keyboard.S:\n\t\t\t\tthis._tiltIncrement = -this._tiltSpeed;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.LEFT:\n\t\t\tcase Keyboard.A:\n\t\t\t\tthis._panIncrement = this._panSpeed;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.RIGHT:\n\t\t\tcase Keyboard.D:\n\t\t\t\tthis._panIncrement = -this._panSpeed;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.Z:\n\t\t\t\tthis._distanceIncrement = this._distanceSpeed;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.X:\n\t\t\t\tthis._distanceIncrement = -this._distanceSpeed;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Key up listener for camera control\n\t */\n\tprivate onKeyUp(event:KeyboardEvent):void\n\t{\n\t\tswitch (event.keyCode) {\n\t\t\tcase Keyboard.UP:\n\t\t\tcase Keyboard.W:\n\t\t\tcase Keyboard.DOWN:\n\t\t\tcase Keyboard.S:\n\t\t\t\tthis._tiltIncrement = 0;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.LEFT:\n\t\t\tcase Keyboard.A:\n\t\t\tcase Keyboard.RIGHT:\n\t\t\tcase Keyboard.D:\n\t\t\t\tthis._panIncrement = 0;\n\t\t\t\tbreak;\n\t\t\tcase Keyboard.Z:\n\t\t\tcase Keyboard.X:\n\t\t\t\tthis._distanceIncrement = 0;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// 3D mouse event handlers.\n\t// ---------------------------------------------------------------------\n\n\tprivate enableMeshMouseListeners(mesh:Mesh):void\n\t{\n\t\tmesh.addEventListener(AwayMouseEvent.MOUSE_OVER, (event:AwayMouseEvent) => this.onMeshMouseOver(event));\n\t\tmesh.addEventListener(AwayMouseEvent.MOUSE_OUT, (event:AwayMouseEvent) => this.onMeshMouseOut(event));\n\t\tmesh.addEventListener(AwayMouseEvent.MOUSE_MOVE, (event:AwayMouseEvent) => this.onMeshMouseMove(event));\n\t\tmesh.addEventListener(AwayMouseEvent.MOUSE_DOWN, (event:AwayMouseEvent) => this.onMeshMouseDown(event));\n\t}\n\n\t/**\n\t * mesh listener for mouse down interaction\n\t */\n\tprivate onMeshMouseDown(event:AwayMouseEvent):void\n\t{\n\t\t//var mesh:Mesh = <Mesh> event.object;\n\t\t//// Paint on the head's material.\n\t\t//if( mesh == this._head ) {\n\t\t//\tvar uv:Point = event.uv;\n\t\t//\tvar textureMaterial:MethodMaterial = (<MethodMaterial> (<Mesh> event.object).material);\n\t\t//\tvar bmd:BitmapData = Single2DTexture( textureMaterial.texture ).bitmapData;\n\t\t//\tvar x:number = Intermediate_MouseInteraction.PAINT_TEXTURE_SIZE*uv.x;\n\t\t//\tvar y:number = Intermediate_MouseInteraction.PAINT_TEXTURE_SIZE*uv.y;\n\t\t//\tvar matrix:Matrix = new Matrix();\n\t\t//\tmatrix.translate(x, y);\n\t\t//\tbmd.draw(this._painter, matrix);\n\t\t//\tSingle2DTexture(textureMaterial.texture).invalidateContent();\n\t\t//}\n\t}\n\n\t/**\n\t * mesh listener for mouse over interaction\n\t */\n\tprivate onMeshMouseOver(event:AwayMouseEvent):void\n\t{\n\t\tvar mesh:Mesh = <Mesh> event.object;\n\t\tmesh.debugVisible = true;\n\t\tif( mesh != this._head ) mesh.material = this._whiteMaterial;\n\t\tthis._pickingPositionTracer.visible = this._pickingNormalTracer.visible = true;\n\t\tthis.onMeshMouseMove(event);\n\t}\n\n\t/**\n\t * mesh listener for mouse out interaction\n\t */\n\tprivate onMeshMouseOut(event:AwayMouseEvent):void\n\t{\n\t\tvar mesh:Mesh = <Mesh> event.object;\n\t\tmesh.debugVisible = false;\n\t\tif( mesh != this._head ) this.choseMeshMaterial( mesh );\n\t\tthis._pickingPositionTracer.visible = this._pickingNormalTracer.visible = false;\n\t\tthis._pickingPositionTracer.transform.position = new Vector3D();\n\t}\n\n\t/**\n\t * mesh listener for mouse move interaction\n\t */\n\tprivate onMeshMouseMove(event:AwayMouseEvent):void\n\t{\n\t\t// Show tracers.\n\t\tthis._pickingPositionTracer.visible = this._pickingNormalTracer.visible = true;\n\t\n\t\t// Update position tracer.\n\t\tthis._pickingPositionTracer.transform.position = event.scenePosition;\n\t\n\t\t// Update normal tracer.\n\t\tthis._pickingNormalTracer.transform.position = this._pickingPositionTracer.transform.position;\n\t\tvar normal:Vector3D = event.sceneNormal.clone();\n\t\tnormal.scaleBy( 25 );\n\t\tthis._pickingNormalTracer.endPosition = normal.clone();\n\t}\n\n\t/**\n\t * Mouse down listener for navigation\n\t */\n\tprivate onMouseDown(event:MouseEvent):void\n\t{\n\t\tthis._lastPanAngle = this._cameraController.panAngle;\n\t\tthis._lastTiltAngle = this._cameraController.tiltAngle;\n\t\tthis._lastMouseX = event.clientX;\n\t\tthis._lastMouseY = event.clientY;\n\t\tthis._move = true;\n\t}\n\n\t/**\n\t * Mouse up listener for navigation\n\t */\n\tprivate onMouseUp(event:MouseEvent):void\n\t{\n\t\tthis._move = false;\n\t}\n\n\t/**\n\t * Mouse move listener for navigation\n\t */\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tif (this._move) {\n\t\t\tthis._cameraController.panAngle = 0.3*(event.clientX - this._lastMouseX) + this._lastPanAngle;\n\t\t\tthis._cameraController.tiltAngle = 0.3*(event.clientY - this._lastMouseY) + this._lastTiltAngle;\n\t\t}\n\t}\n\n\t/**\n\t * Mouse wheel listener for navigation\n\t */\n\tprivate onMouseWheel(event:MouseWheelEvent)\n\t{\n\t\tthis._cameraController.distance -= event.wheelDelta;\n\n\t\tif (this._cameraController.distance < 100)\n\t\t\tthis._cameraController.distance = 100;\n\t\telse if (this._cameraController.distance > 2000)\n\t\t\tthis._cameraController.distance = 2000;\n\t}\n\n\t/**\n\t * window listener for resize events\n\t */\n\tprivate onResize(event:UIEvent = null):void\n\t{\n\t\tthis._view.y = 0;\n\t\tthis._view.x = 0;\n\t\tthis._view.width = window.innerWidth;\n\t\tthis._view.height = window.innerHeight;\n\t}\n}\n\nwindow.onload = function()\n{\n\tnew Intermediate_MouseInteraction();\n}",
    null
  ],
  "sourceRoot": ""
}