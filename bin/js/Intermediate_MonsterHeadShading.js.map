{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/Intermediate_MonsterHeadShading.ts",
    "Intermediate_MonsterHeadShading.js"
  ],
  "names": [
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "AssetEvent",
    "AwayEvent",
    "LoaderEvent",
    "ProgressEvent",
    "Vector3D",
    "AssetLibrary",
    "AssetLoaderContext",
    "AssetType",
    "URLLoader",
    "URLLoaderDataFormat",
    "URLRequest",
    "ParserUtils",
    "ImageTexture",
    "SpecularBitmapTexture",
    "RequestAnimationFrame",
    "Scene",
    "View",
    "HoverController",
    "Camera",
    "DirectionalLight",
    "PointLight",
    "StaticLightPicker",
    "Cast",
    "DefaultRenderer",
    "MethodMaterial",
    "MethodRendererPool",
    "MethodMaterialMode",
    "SpecularFresnelMethod",
    "ShadowSoftMethod",
    "AWDParser",
    "Intermediate_MonsterHeadShading",
    "this",
    "_textureStrings",
    "Array",
    "_textureDictionary",
    "Object",
    "_advancedMethod",
    "_numTextures",
    "_currentTexture",
    "_n",
    "_assetsRoot",
    "_move",
    "time",
    "_shadowRange",
    "_lightDirection",
    "Math",
    "PI",
    "_lightElevation",
    "init",
    "prototype",
    "initEngine",
    "initLights",
    "initListeners",
    "load",
    "_scene",
    "_camera",
    "projection",
    "near",
    "far",
    "_view",
    "_cameraController",
    "yFactor",
    "x",
    "sin",
    "cos",
    "y",
    "z",
    "_directionalLight",
    "color",
    "ambient",
    "specular",
    "ambientColor",
    "castsShadows",
    "shadowMapper",
    "lightOffset",
    "addChild",
    "_blueLight",
    "_redLight",
    "_lightPicker",
    "_this",
    "window",
    "onresize",
    "event",
    "onResize",
    "document",
    "onmousedown",
    "onMouseDown",
    "onmouseup",
    "onMouseUp",
    "onmousemove",
    "onMouseMove",
    "parseAWDDelegate",
    "parseAWD",
    "parseBitmapDelegate",
    "parseBitmap",
    "loadProgressDelegate",
    "loadProgress",
    "onBitmapCompleteDelegate",
    "onBitmapComplete",
    "onAssetCompleteDelegate",
    "onAssetComplete",
    "onResourceCompleteDelegate",
    "onResourceComplete",
    "timer",
    "onEnterFrame",
    "start",
    "updateDirection",
    "direction",
    "updateRange",
    "_softShadowMethod",
    "range",
    "url",
    "loader",
    "substring",
    "dataFormat",
    "ARRAY_BUFFER",
    "_loadingText",
    "addEventListener",
    "COMPLETE",
    "BLOB",
    "PROGRESS",
    "P",
    "floor",
    "console",
    "log",
    "urlLoader",
    "target",
    "image",
    "blobToImage",
    "data",
    "onload",
    "removeEventListener",
    "ASSET_COMPLETE",
    "RESOURCE_COMPLETE",
    "loadData",
    "bitmapData",
    "dt",
    "render",
    "asset",
    "assetType",
    "MESH",
    "_headModel",
    "geometry",
    "scale",
    "_headMaterial",
    "mode",
    "MULTI_PASS",
    "mipmap",
    "normalMap",
    "lightPicker",
    "epsilon",
    "shadowMethod",
    "_fresnelMethod",
    "fresnelPower",
    "specularMethod",
    "specularMap",
    "gloss",
    "len",
    "subMeshes",
    "material",
    "onExtraResourceComplete",
    "_lastPanAngle",
    "panAngle",
    "_lastTiltAngle",
    "tiltAngle",
    "_lastMouseX",
    "clientX",
    "_lastMouseY",
    "clientY",
    "width",
    "innerWidth",
    "height",
    "innerHeight",
    "awayjs-core/lib/events/AssetEvent",
    "undefined",
    "awayjs-core/lib/events/Event",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ProgressEvent",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/library/AssetLibrary",
    "awayjs-core/lib/library/AssetLoaderContext",
    "awayjs-core/lib/library/AssetType",
    "awayjs-core/lib/net/URLLoader",
    "awayjs-core/lib/net/URLLoaderDataFormat",
    "awayjs-core/lib/net/URLRequest",
    "awayjs-core/lib/parsers/ParserUtils",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-core/lib/textures/SpecularBitmapTexture",
    "awayjs-core/lib/utils/RequestAnimationFrame",
    "awayjs-display/lib/containers/Scene",
    "awayjs-display/lib/containers/View",
    "awayjs-display/lib/controllers/HoverController",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "awayjs-display/lib/utils/Cast",
    "awayjs-methodmaterials/lib/MethodMaterial",
    "awayjs-methodmaterials/lib/MethodMaterialMode",
    "awayjs-methodmaterials/lib/methods/ShadowSoftMethod",
    "awayjs-methodmaterials/lib/methods/SpecularFresnelMethod",
    "awayjs-methodmaterials/lib/pool/MethodRendererPool",
    "awayjs-parsers/lib/AWDParser",
    "awayjs-renderergl/lib/DefaultRenderer"
  ],
  "mappings": "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",
  "file": "Intermediate_MonsterHeadShading.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "﻿/*\n\nMonster Head example in Away3d\n\nDemonstrates:\n\nHow to use the AssetLibrary to load an internal AWD model.\nHow to set custom material methods on a model.\nHow to setup soft shadows and multiple lightsources with a multipass texture\nHow to use a diffuse gradient method as a cheap way to simulate sub-surface scattering\n\nCode by Rob Bateman & David Lenaerts\nrob@infiniteturtles.co.uk\nhttp://www.infiniteturtles.co.uk\ndavid.lenaerts@gmail.com\nhttp://www.derschmale.com\n\nThis code is distributed under the MIT License\n\nCopyright (c) The Away Foundation http://www.theawayfoundation.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AwayEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ProgressEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProgressEvent\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetLibrary\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLibrary\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport URLLoader\t\t\t\t\t= require(\"awayjs-core/lib/net/URLLoader\");\nimport URLLoaderDataFormat\t\t\t= require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport ParserUtils\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserUtils\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport SpecularBitmapTexture\t\t= require(\"awayjs-core/lib/textures/SpecularBitmapTexture\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport HoverController\t\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Cast\t\t\t\t\t\t\t= require(\"awayjs-display/lib/utils/Cast\");\n\nimport DefaultRenderer\t\t\t\t= require(\"awayjs-renderergl/lib/DefaultRenderer\");\n\nimport MethodMaterial\t\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterial\");\nimport MethodRendererPool\t\t\t= require(\"awayjs-methodmaterials/lib/pool/MethodRendererPool\");\nimport MethodMaterialMode\t\t\t= require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\nimport DiffuseGradientMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/DiffuseGradientMethod\");\nimport SpecularFresnelMethod\t\t= require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\nimport ShadowSoftMethod\t\t\t\t= require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\n\nimport AWDParser\t\t\t\t\t= require(\"awayjs-parsers/lib/AWDParser\");\n\nclass Intermediate_MonsterHeadShading\n{\n\t//textures\n\tprivate _textureStrings:Array<string> = Array<string>(\"monsterhead_diffuse.jpg\", \"monsterhead_specular.jpg\", \"monsterhead_normals.jpg\");\n\tprivate _textureDictionary:Object = new Object();\n\n\t//engine variables\n\tprivate _scene:Scene;\n\tprivate _camera:Camera;\n\tprivate _view:View;\n\tprivate _cameraController:HoverController;\n\n\t//material objects\n\tprivate _headMaterial:MethodMaterial;\n\tprivate _softShadowMethod:ShadowSoftMethod;\n\tprivate _fresnelMethod:SpecularFresnelMethod;\n\t//private _diffuseMethod:BasicDiffuseMethod;\n\t//private _specularMethod:BasicSpecularMethod;\n\n\t//scene objects\n\tprivate _blueLight:PointLight;\n\tprivate _redLight:PointLight;\n\tprivate _directionalLight:DirectionalLight;\n\tprivate _lightPicker:StaticLightPicker;\n\tprivate _headModel:Mesh;\n\tprivate _advancedMethod:Boolean = true;\n\n\t//loading variables\n\tprivate _numTextures:number /*uint*/ = 0;\n\tprivate _currentTexture:number /*uint*/ = 0;\n\tprivate _n:number /*uint*/ = 0;\n\tprivate _loadingText:string;\n\n\t//root filepath for asset loading\n\tprivate _assetsRoot:string = \"assets/monsterhead/\";\n\n\t//navigation variables\n\tprivate _move:Boolean = false;\n\tprivate _lastPanAngle:number;\n\tprivate _lastTiltAngle:number;\n\tprivate _lastMouseX:number;\n\tprivate _lastMouseY:number;\n\tprivate timer:RequestAnimationFrame;\n\tprivate time:number = 0;\n\n\tprivate parseAWDDelegate:(event:AwayEvent) => void;\n\tprivate parseBitmapDelegate:(event:AwayEvent) => void;\n\tprivate loadProgressDelegate:(event:ProgressEvent) => void;\n\tprivate onBitmapCompleteDelegate:(event:Event) => void;\n\tprivate onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate onResourceCompleteDelegate:(event:LoaderEvent) => void;\n\n\tprivate _shadowRange:number = 3;\n\tprivate _lightDirection:number = 120*Math.PI/180;\n\tprivate _lightElevation:number = 30*Math.PI/180;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor()\n\t{\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Global initialise function\n\t */\n\tprivate init()\n\t{\n\t\tthis.initEngine();\n\t\tthis.initLights();\n\t\tthis.initListeners();\n\n\t\t//kickoff asset loading\n\t\tthis._n = 0;\n\t\tthis._numTextures = this._textureStrings.length;\n\t\tthis.load(this._textureStrings[this._n]);\n\t}\n\n\t/**\n\t * Initialise the engine\n\t */\n\tprivate initEngine()\n\t{\n\t\tthis._scene = new Scene();\n\n\t\tthis._camera = new Camera();\n\t\tthis._camera.projection.near = 20;\n\t\tthis._camera.projection.far = 1000;\n\n\t\tthis._view = new View(new DefaultRenderer(MethodRendererPool), this._scene, this._camera);\n\n\t\t//setup controller to be used on the camera\n\t\tthis._cameraController = new HoverController(this._camera, null, 225, 10, 800);\n\t\tthis._cameraController.yFactor = 1;\n\t}\n\n\t/**\n\t * Initialise the lights in a scene\n\t */\n\tprivate initLights()\n\t{\n\t\t//var initialAzimuth:number = .6;\n\t\t//var initialArc:number = 2;\n\t\tvar x:number = Math.sin(this._lightElevation)*Math.cos(this._lightDirection);\n\t\tvar y:number = -Math.cos(this._lightElevation);\n\t\tvar z:number = Math.sin(this._lightElevation)*Math.sin(this._lightDirection);\n\n\t\t// main light casting the shadows\n\t\tthis._directionalLight = new DirectionalLight(x, y, z);\n\t\tthis._directionalLight.color = 0xffeedd;\n\t\tthis._directionalLight.ambient = 1;\n\t\tthis._directionalLight.specular = .3;\n\t\tthis._directionalLight.ambientColor = 0x101025;\n\t\tthis._directionalLight.castsShadows = true;\n\t\t(<DirectionalShadowMapper> this._directionalLight.shadowMapper).lightOffset = 1000;\n\t\tthis._scene.addChild(this._directionalLight);\n\n\t\t// blue point light coming from the right\n\t\tthis._blueLight = new PointLight();\n\t\tthis._blueLight.color = 0x4080ff;\n\t\tthis._blueLight.x = 3000;\n\t\tthis._blueLight.z = 700;\n\t\tthis._blueLight.y = 20;\n\t\tthis._scene.addChild(this._blueLight);\n\n\t\t// red light coming from the left\n\t\tthis._redLight = new PointLight();\n\t\tthis._redLight.color = 0x802010;\n\t\tthis._redLight.x = -2000;\n\t\tthis._redLight.z = 800;\n\t\tthis._redLight.y = -400;\n\t\tthis._scene.addChild(this._redLight);\n\n\t\tthis._lightPicker = new StaticLightPicker([this._directionalLight, this._blueLight, this._redLight]);\n\n\t}\n\n\t/**\n\t * Initialise the listeners\n\t */\n\tprivate initListeners()\n\t{\n\t\twindow.onresize  = (event:UIEvent) => this.onResize(event);\n\n\t\tdocument.onmousedown = (event:MouseEvent) => this.onMouseDown(event);\n\t\tdocument.onmouseup = (event:MouseEvent) => this.onMouseUp(event);\n\t\tdocument.onmousemove = (event:MouseEvent) => this.onMouseMove(event);\n\n\t\tthis.onResize();\n\n\t\tthis.parseAWDDelegate = (event:AwayEvent) => this.parseAWD(event);\n\t\tthis.parseBitmapDelegate = (event:AwayEvent) => this.parseBitmap(event);\n\t\tthis.loadProgressDelegate = (event:ProgressEvent) => this.loadProgress(event);\n\t\tthis.onBitmapCompleteDelegate = (event:Event) => this.onBitmapComplete(event);\n\t\tthis.onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis.onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\n\t\tthis.timer = new RequestAnimationFrame(this.onEnterFrame, this);\n\t\tthis.timer.start();\n\t}\n\n\t/**\n\t * Updates the direction of the directional lightsource\n\t */\n\tprivate updateDirection()\n\t{\n\t\tthis._directionalLight.direction = new Vector3D(\n\t\t\tMath.sin(this._lightElevation)*Math.cos(this._lightDirection),\n\t\t\t-Math.cos(this._lightElevation),\n\t\t\tMath.sin(this._lightElevation)*Math.sin(this._lightDirection)\n\t\t);\n\t}\n\n\tprivate updateRange()\n\t{\n\t\tthis._softShadowMethod.range = this._shadowRange;\n\t}\n\n\t/**\n\t * Global binary file loader\n\t */\n\tprivate load(url:string)\n\t{\n\t\tvar loader:URLLoader = new URLLoader();\n\t\tswitch (url.substring(url.length - 3)) {\n\t\t\tcase \"AWD\":\n\t\t\tcase \"awd\":\n\t\t\t\tloader.dataFormat = URLLoaderDataFormat.ARRAY_BUFFER;\n\t\t\t\tthis._loadingText = \"Loading Model\";\n\t\t\t\tloader.addEventListener(AwayEvent.COMPLETE, this.parseAWDDelegate);\n\t\t\t\tbreak;\n\t\t\tcase \"png\":\n\t\t\tcase \"jpg\":\n\t\t\t\tloader.dataFormat = URLLoaderDataFormat.BLOB;\n\t\t\t\tthis._currentTexture++;\n\t\t\t\tthis._loadingText = \"Loading Textures\";\n\t\t\t\tloader.addEventListener(AwayEvent.COMPLETE, this.parseBitmapDelegate);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tloader.addEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\n\t\tloader.load(new URLRequest(this._assetsRoot+url));\n\t}\n\n\t/**\n\t * Display current load\n\t */\n\tprivate loadProgress(event:ProgressEvent)\n\t{\n\t\t//TODO work out why the casting on ProgressEvent fails for bytesLoaded and bytesTotal properties\n\t\tvar P:number = Math.floor(event[\"bytesLoaded\"] / event[\"bytesTotal\"] * 100);\n\t\tif (P != 100) {\n\t\t\tconsole.log(this._loadingText + '\\n' + ((this._loadingText == \"Loading Model\")? Math.floor((event[\"bytesLoaded\"] / 1024) << 0) + 'kb | ' + Math.floor((event[\"bytesTotal\"] / 1024) << 0) + 'kb' : this._currentTexture + ' | ' + this._numTextures));\n\t\t}\n\t}\n\n\t/**\n\t * Parses the Bitmap file\n\t */\n\tprivate parseBitmap(event:AwayEvent)\n\t{\n\t\tvar urlLoader:URLLoader = <URLLoader> event.target;\n\t\tvar image:HTMLImageElement = ParserUtils.blobToImage(urlLoader.data);\n\t\timage.onload = this.onBitmapCompleteDelegate;\n\t\turlLoader.removeEventListener(AwayEvent.COMPLETE, this.parseBitmapDelegate);\n\t\turlLoader.removeEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\n\t\turlLoader = null;\n\t}\n\n\t/**\n\t * Parses the AWD file\n\t */\n\tprivate parseAWD(event:AwayEvent)\n\t{\n\t\tconsole.log(\"Parsing Data\");\n\t\tvar urlLoader:URLLoader = <URLLoader> event.target;\n\n\t\t//setup parser\n\t\tAssetLibrary.addEventListener(AssetEvent.ASSET_COMPLETE, this.onAssetCompleteDelegate);\n\t\tAssetLibrary.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this.onResourceCompleteDelegate);\n\t\tAssetLibrary.loadData(urlLoader.data, new AssetLoaderContext(false), null, new AWDParser());\n\n\t\turlLoader.removeEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\n\t\turlLoader.removeEventListener(AwayEvent.COMPLETE, this.parseAWDDelegate);\n\t\turlLoader = null;\n\t}\n\n\t/**\n\t * Listener for bitmap complete event on loader\n\t */\n\tprivate onBitmapComplete(event:Event)\n\t{\n\t\tvar image:HTMLImageElement = <HTMLImageElement> event.target;\n\t\timage.onload = null;\n\n\t\t//create bitmap texture in dictionary\n\t\tif (!this._textureDictionary[this._textureStrings[this._n]])\n\t\t\tthis._textureDictionary[this._textureStrings[this._n]] = (this._n == 1)? new SpecularBitmapTexture(Cast.bitmapData(image)) : new ImageTexture(image);\n\n\t\tthis._n++;\n\n\t\t//switch to next teture set\n\t\tif (this._n < this._textureStrings.length) {\n\t\t\tthis.load(this._textureStrings[this._n]);\n\t\t} else {\n\t\t\tthis.load(\"MonsterHead.awd\");\n\t\t}\n\t}\n\n\t/**\n\t * Navigation and render loop\n\t */\n\tprivate onEnterFrame(dt:number)\n\t{\n\t\tthis._view.render();\n\t}\n\n\t/**\n\t * Listener for asset complete event on loader\n\t */\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tif (event.asset.assetType == AssetType.MESH) {\n\t\t\tthis._headModel = <Mesh> event.asset;\n\t\t\tthis._headModel.geometry.scale(4);\n\t\t\tthis._headModel.y = -20;\n\t\t\tthis._scene.addChild(this._headModel);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered once all resources are loaded\n\t */\n\tprivate onResourceComplete(e:LoaderEvent)\n\t{\n\t\tAssetLibrary.removeEventListener(AssetEvent.ASSET_COMPLETE, this.onAssetCompleteDelegate);\n\t\tAssetLibrary.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this.onResourceCompleteDelegate);\n\n\t\t//setup custom multipass material\n\t\tthis._headMaterial = new MethodMaterial(this._textureDictionary[\"monsterhead_diffuse.jpg\"]);\n\t\tthis._headMaterial.mode = MethodMaterialMode.MULTI_PASS;\n\t\tthis._headMaterial.mipmap = false;\n\t\tthis._headMaterial.normalMap = this._textureDictionary[\"monsterhead_normals.jpg\"];\n\t\tthis._headMaterial.lightPicker = this._lightPicker;\n\t\tthis._headMaterial.ambientColor = 0x303040;\n\n\t\t// create soft shadows with a lot of samples for best results. With the current method setup, any more samples would fail to compile\n\t\tthis._softShadowMethod = new ShadowSoftMethod(this._directionalLight, 20);\n\t\tthis._softShadowMethod.range = this._shadowRange;\t// the sample radius defines the softness of the shadows\n\t\tthis._softShadowMethod.epsilon = .1;\n\t\tthis._headMaterial.shadowMethod = this._softShadowMethod;\n\n\t\t// create specular reflections that are stronger from the sides\n\t\tthis._fresnelMethod = new SpecularFresnelMethod(true);\n\t\tthis._fresnelMethod.fresnelPower = 3;\n\t\tthis._headMaterial.specularMethod = this._fresnelMethod;\n\t\tthis._headMaterial.specularMap = this._textureDictionary[\"monsterhead_specular.jpg\"];\n\t\tthis._headMaterial.specular = 3;\n\t\tthis._headMaterial.gloss = 10;\n\n\t\t//apply material to head model\n\t\tvar len:number = this._headModel.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._headModel.subMeshes[i].material = this._headMaterial;\n\n\t\tAssetLibrary.addEventListener(LoaderEvent.RESOURCE_COMPLETE, (event:LoaderEvent) => this.onExtraResourceComplete(event));\n\n\t\t//diffuse gradient texture\n\t\tAssetLibrary.load(new URLRequest(\"assets/diffuseGradient.jpg\"));\n\t}\n\n\n\t/**\n\t * Triggered once extra resources are loaded\n\t */\n\tprivate onExtraResourceComplete(event:LoaderEvent)\n\t{\n\t\tswitch (event.url) {\n\t\t\tcase \"assets/diffuseGradient.jpg\" :\n\t\t\t\t// very low-cost and crude subsurface scattering for diffuse shading\n\t\t\t\t//this._headMaterial.diffuseMethod = new DiffuseGradientMethod(<ImageTexture> event.assets[ 0 ]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Mouse down listener for navigation\n\t */\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._lastPanAngle = this._cameraController.panAngle;\n\t\tthis._lastTiltAngle = this._cameraController.tiltAngle;\n\t\tthis._lastMouseX = event.clientX;\n\t\tthis._lastMouseY = event.clientY;\n\t\tthis._move = true;\n\t}\n\n\t/**\n\t * Mouse up listener for navigation\n\t */\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis._move = false;\n\t}\n\n\t/**\n\t * Mouse move listener for mouseLock\n\t */\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tif (this._move) {\n\t\t\tthis._cameraController.panAngle = 0.3*(event.clientX - this._lastMouseX) + this._lastPanAngle;\n\t\t\tthis._cameraController.tiltAngle = 0.3*(event.clientY - this._lastMouseY) + this._lastTiltAngle;\n\t\t}\n\t}\n\n\t/**\n\t * window listener for resize events\n\t */\n\tprivate onResize(event:UIEvent = null)\n\t{\n\t\tthis._view.y = 0;\n\t\tthis._view.x = 0;\n\t\tthis._view.width = window.innerWidth;\n\t\tthis._view.height = window.innerHeight;\n\t}\n}\n\nwindow.onload = function ()\n{\n\tnew Intermediate_MonsterHeadShading();\n}",
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\r\n\r\nMonster Head example in Away3d\r\n\r\nDemonstrates:\r\n\r\nHow to use the AssetLibrary to load an internal AWD model.\r\nHow to set custom material methods on a model.\r\nHow to setup soft shadows and multiple lightsources with a multipass texture\r\nHow to use a diffuse gradient method as a cheap way to simulate sub-surface scattering\r\n\r\nCode by Rob Bateman & David Lenaerts\r\nrob@infiniteturtles.co.uk\r\nhttp://www.infiniteturtles.co.uk\r\ndavid.lenaerts@gmail.com\r\nhttp://www.derschmale.com\r\n\r\nThis code is distributed under the MIT License\r\n\r\nCopyright (c) The Away Foundation http://www.theawayfoundation.org\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the “Software”), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n*/\r\nvar AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar AwayEvent = require(\"awayjs-core/lib/events/Event\");\r\nvar LoaderEvent = require(\"awayjs-core/lib/events/LoaderEvent\");\r\nvar ProgressEvent = require(\"awayjs-core/lib/events/ProgressEvent\");\r\nvar Vector3D = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar AssetLibrary = require(\"awayjs-core/lib/library/AssetLibrary\");\r\nvar AssetLoaderContext = require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nvar AssetType = require(\"awayjs-core/lib/library/AssetType\");\r\nvar URLLoader = require(\"awayjs-core/lib/net/URLLoader\");\r\nvar URLLoaderDataFormat = require(\"awayjs-core/lib/net/URLLoaderDataFormat\");\r\nvar URLRequest = require(\"awayjs-core/lib/net/URLRequest\");\r\nvar ParserUtils = require(\"awayjs-core/lib/parsers/ParserUtils\");\r\nvar ImageTexture = require(\"awayjs-core/lib/textures/ImageTexture\");\r\nvar SpecularBitmapTexture = require(\"awayjs-core/lib/textures/SpecularBitmapTexture\");\r\nvar RequestAnimationFrame = require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\r\nvar Scene = require(\"awayjs-display/lib/containers/Scene\");\r\nvar View = require(\"awayjs-display/lib/containers/View\");\r\nvar HoverController = require(\"awayjs-display/lib/controllers/HoverController\");\r\nvar Camera = require(\"awayjs-display/lib/entities/Camera\");\r\nvar DirectionalLight = require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nvar PointLight = require(\"awayjs-display/lib/entities/PointLight\");\r\nvar StaticLightPicker = require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\r\nvar Cast = require(\"awayjs-display/lib/utils/Cast\");\r\nvar DefaultRenderer = require(\"awayjs-renderergl/lib/DefaultRenderer\");\r\nvar MethodMaterial = require(\"awayjs-methodmaterials/lib/MethodMaterial\");\r\nvar MethodRendererPool = require(\"awayjs-methodmaterials/lib/pool/MethodRendererPool\");\r\nvar MethodMaterialMode = require(\"awayjs-methodmaterials/lib/MethodMaterialMode\");\r\nvar SpecularFresnelMethod = require(\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\");\r\nvar ShadowSoftMethod = require(\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\");\r\nvar AWDParser = require(\"awayjs-parsers/lib/AWDParser\");\r\nvar Intermediate_MonsterHeadShading = (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Intermediate_MonsterHeadShading() {\r\n        //textures\r\n        this._textureStrings = Array(\"monsterhead_diffuse.jpg\", \"monsterhead_specular.jpg\", \"monsterhead_normals.jpg\");\r\n        this._textureDictionary = new Object();\r\n        this._advancedMethod = true;\r\n        //loading variables\r\n        this._numTextures = 0;\r\n        this._currentTexture = 0;\r\n        this._n = 0;\r\n        //root filepath for asset loading\r\n        this._assetsRoot = \"assets/monsterhead/\";\r\n        //navigation variables\r\n        this._move = false;\r\n        this.time = 0;\r\n        this._shadowRange = 3;\r\n        this._lightDirection = 120 * Math.PI / 180;\r\n        this._lightElevation = 30 * Math.PI / 180;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Global initialise function\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.init = function () {\r\n        this.initEngine();\r\n        this.initLights();\r\n        this.initListeners();\r\n        //kickoff asset loading\r\n        this._n = 0;\r\n        this._numTextures = this._textureStrings.length;\r\n        this.load(this._textureStrings[this._n]);\r\n    };\r\n    /**\r\n     * Initialise the engine\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.initEngine = function () {\r\n        this._scene = new Scene();\r\n        this._camera = new Camera();\r\n        this._camera.projection.near = 20;\r\n        this._camera.projection.far = 1000;\r\n        this._view = new View(new DefaultRenderer(MethodRendererPool), this._scene, this._camera);\r\n        //setup controller to be used on the camera\r\n        this._cameraController = new HoverController(this._camera, null, 225, 10, 800);\r\n        this._cameraController.yFactor = 1;\r\n    };\r\n    /**\r\n     * Initialise the lights in a scene\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.initLights = function () {\r\n        //var initialAzimuth:number = .6;\r\n        //var initialArc:number = 2;\r\n        var x = Math.sin(this._lightElevation) * Math.cos(this._lightDirection);\r\n        var y = -Math.cos(this._lightElevation);\r\n        var z = Math.sin(this._lightElevation) * Math.sin(this._lightDirection);\r\n        // main light casting the shadows\r\n        this._directionalLight = new DirectionalLight(x, y, z);\r\n        this._directionalLight.color = 0xffeedd;\r\n        this._directionalLight.ambient = 1;\r\n        this._directionalLight.specular = .3;\r\n        this._directionalLight.ambientColor = 0x101025;\r\n        this._directionalLight.castsShadows = true;\r\n        this._directionalLight.shadowMapper.lightOffset = 1000;\r\n        this._scene.addChild(this._directionalLight);\r\n        // blue point light coming from the right\r\n        this._blueLight = new PointLight();\r\n        this._blueLight.color = 0x4080ff;\r\n        this._blueLight.x = 3000;\r\n        this._blueLight.z = 700;\r\n        this._blueLight.y = 20;\r\n        this._scene.addChild(this._blueLight);\r\n        // red light coming from the left\r\n        this._redLight = new PointLight();\r\n        this._redLight.color = 0x802010;\r\n        this._redLight.x = -2000;\r\n        this._redLight.z = 800;\r\n        this._redLight.y = -400;\r\n        this._scene.addChild(this._redLight);\r\n        this._lightPicker = new StaticLightPicker([this._directionalLight, this._blueLight, this._redLight]);\r\n    };\r\n    /**\r\n     * Initialise the listeners\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.initListeners = function () {\r\n        var _this = this;\r\n        window.onresize = function (event) { return _this.onResize(event); };\r\n        document.onmousedown = function (event) { return _this.onMouseDown(event); };\r\n        document.onmouseup = function (event) { return _this.onMouseUp(event); };\r\n        document.onmousemove = function (event) { return _this.onMouseMove(event); };\r\n        this.onResize();\r\n        this.parseAWDDelegate = function (event) { return _this.parseAWD(event); };\r\n        this.parseBitmapDelegate = function (event) { return _this.parseBitmap(event); };\r\n        this.loadProgressDelegate = function (event) { return _this.loadProgress(event); };\r\n        this.onBitmapCompleteDelegate = function (event) { return _this.onBitmapComplete(event); };\r\n        this.onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\r\n        this.onResourceCompleteDelegate = function (event) { return _this.onResourceComplete(event); };\r\n        this.timer = new RequestAnimationFrame(this.onEnterFrame, this);\r\n        this.timer.start();\r\n    };\r\n    /**\r\n     * Updates the direction of the directional lightsource\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.updateDirection = function () {\r\n        this._directionalLight.direction = new Vector3D(Math.sin(this._lightElevation) * Math.cos(this._lightDirection), -Math.cos(this._lightElevation), Math.sin(this._lightElevation) * Math.sin(this._lightDirection));\r\n    };\r\n    Intermediate_MonsterHeadShading.prototype.updateRange = function () {\r\n        this._softShadowMethod.range = this._shadowRange;\r\n    };\r\n    /**\r\n     * Global binary file loader\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.load = function (url) {\r\n        var loader = new URLLoader();\r\n        switch (url.substring(url.length - 3)) {\r\n            case \"AWD\":\r\n            case \"awd\":\r\n                loader.dataFormat = URLLoaderDataFormat.ARRAY_BUFFER;\r\n                this._loadingText = \"Loading Model\";\r\n                loader.addEventListener(AwayEvent.COMPLETE, this.parseAWDDelegate);\r\n                break;\r\n            case \"png\":\r\n            case \"jpg\":\r\n                loader.dataFormat = URLLoaderDataFormat.BLOB;\r\n                this._currentTexture++;\r\n                this._loadingText = \"Loading Textures\";\r\n                loader.addEventListener(AwayEvent.COMPLETE, this.parseBitmapDelegate);\r\n                break;\r\n        }\r\n        loader.addEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\r\n        loader.load(new URLRequest(this._assetsRoot + url));\r\n    };\r\n    /**\r\n     * Display current load\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.loadProgress = function (event) {\r\n        //TODO work out why the casting on ProgressEvent fails for bytesLoaded and bytesTotal properties\r\n        var P = Math.floor(event[\"bytesLoaded\"] / event[\"bytesTotal\"] * 100);\r\n        if (P != 100) {\r\n            console.log(this._loadingText + '\\n' + ((this._loadingText == \"Loading Model\") ? Math.floor((event[\"bytesLoaded\"] / 1024) << 0) + 'kb | ' + Math.floor((event[\"bytesTotal\"] / 1024) << 0) + 'kb' : this._currentTexture + ' | ' + this._numTextures));\r\n        }\r\n    };\r\n    /**\r\n     * Parses the Bitmap file\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.parseBitmap = function (event) {\r\n        var urlLoader = event.target;\r\n        var image = ParserUtils.blobToImage(urlLoader.data);\r\n        image.onload = this.onBitmapCompleteDelegate;\r\n        urlLoader.removeEventListener(AwayEvent.COMPLETE, this.parseBitmapDelegate);\r\n        urlLoader.removeEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\r\n        urlLoader = null;\r\n    };\r\n    /**\r\n     * Parses the AWD file\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.parseAWD = function (event) {\r\n        console.log(\"Parsing Data\");\r\n        var urlLoader = event.target;\r\n        //setup parser\r\n        AssetLibrary.addEventListener(AssetEvent.ASSET_COMPLETE, this.onAssetCompleteDelegate);\r\n        AssetLibrary.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this.onResourceCompleteDelegate);\r\n        AssetLibrary.loadData(urlLoader.data, new AssetLoaderContext(false), null, new AWDParser());\r\n        urlLoader.removeEventListener(ProgressEvent.PROGRESS, this.loadProgressDelegate);\r\n        urlLoader.removeEventListener(AwayEvent.COMPLETE, this.parseAWDDelegate);\r\n        urlLoader = null;\r\n    };\r\n    /**\r\n     * Listener for bitmap complete event on loader\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onBitmapComplete = function (event) {\r\n        var image = event.target;\r\n        image.onload = null;\r\n        //create bitmap texture in dictionary\r\n        if (!this._textureDictionary[this._textureStrings[this._n]])\r\n            this._textureDictionary[this._textureStrings[this._n]] = (this._n == 1) ? new SpecularBitmapTexture(Cast.bitmapData(image)) : new ImageTexture(image);\r\n        this._n++;\r\n        //switch to next teture set\r\n        if (this._n < this._textureStrings.length) {\r\n            this.load(this._textureStrings[this._n]);\r\n        }\r\n        else {\r\n            this.load(\"MonsterHead.awd\");\r\n        }\r\n    };\r\n    /**\r\n     * Navigation and render loop\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onEnterFrame = function (dt) {\r\n        this._view.render();\r\n    };\r\n    /**\r\n     * Listener for asset complete event on loader\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onAssetComplete = function (event) {\r\n        if (event.asset.assetType == AssetType.MESH) {\r\n            this._headModel = event.asset;\r\n            this._headModel.geometry.scale(4);\r\n            this._headModel.y = -20;\r\n            this._scene.addChild(this._headModel);\r\n        }\r\n    };\r\n    /**\r\n     * Triggered once all resources are loaded\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onResourceComplete = function (e) {\r\n        var _this = this;\r\n        AssetLibrary.removeEventListener(AssetEvent.ASSET_COMPLETE, this.onAssetCompleteDelegate);\r\n        AssetLibrary.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this.onResourceCompleteDelegate);\r\n        //setup custom multipass material\r\n        this._headMaterial = new MethodMaterial(this._textureDictionary[\"monsterhead_diffuse.jpg\"]);\r\n        this._headMaterial.mode = MethodMaterialMode.MULTI_PASS;\r\n        this._headMaterial.mipmap = false;\r\n        this._headMaterial.normalMap = this._textureDictionary[\"monsterhead_normals.jpg\"];\r\n        this._headMaterial.lightPicker = this._lightPicker;\r\n        this._headMaterial.ambientColor = 0x303040;\r\n        // create soft shadows with a lot of samples for best results. With the current method setup, any more samples would fail to compile\r\n        this._softShadowMethod = new ShadowSoftMethod(this._directionalLight, 20);\r\n        this._softShadowMethod.range = this._shadowRange; // the sample radius defines the softness of the shadows\r\n        this._softShadowMethod.epsilon = .1;\r\n        this._headMaterial.shadowMethod = this._softShadowMethod;\r\n        // create specular reflections that are stronger from the sides\r\n        this._fresnelMethod = new SpecularFresnelMethod(true);\r\n        this._fresnelMethod.fresnelPower = 3;\r\n        this._headMaterial.specularMethod = this._fresnelMethod;\r\n        this._headMaterial.specularMap = this._textureDictionary[\"monsterhead_specular.jpg\"];\r\n        this._headMaterial.specular = 3;\r\n        this._headMaterial.gloss = 10;\r\n        //apply material to head model\r\n        var len = this._headModel.subMeshes.length;\r\n        for (var i = 0; i < len; i++)\r\n            this._headModel.subMeshes[i].material = this._headMaterial;\r\n        AssetLibrary.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onExtraResourceComplete(event); });\r\n        //diffuse gradient texture\r\n        AssetLibrary.load(new URLRequest(\"assets/diffuseGradient.jpg\"));\r\n    };\r\n    /**\r\n     * Triggered once extra resources are loaded\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onExtraResourceComplete = function (event) {\r\n        switch (event.url) {\r\n            case \"assets/diffuseGradient.jpg\":\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Mouse down listener for navigation\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onMouseDown = function (event) {\r\n        this._lastPanAngle = this._cameraController.panAngle;\r\n        this._lastTiltAngle = this._cameraController.tiltAngle;\r\n        this._lastMouseX = event.clientX;\r\n        this._lastMouseY = event.clientY;\r\n        this._move = true;\r\n    };\r\n    /**\r\n     * Mouse up listener for navigation\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onMouseUp = function (event) {\r\n        this._move = false;\r\n    };\r\n    /**\r\n     * Mouse move listener for mouseLock\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onMouseMove = function (event) {\r\n        if (this._move) {\r\n            this._cameraController.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;\r\n            this._cameraController.tiltAngle = 0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;\r\n        }\r\n    };\r\n    /**\r\n     * window listener for resize events\r\n     */\r\n    Intermediate_MonsterHeadShading.prototype.onResize = function (event) {\r\n        if (event === void 0) { event = null; }\r\n        this._view.y = 0;\r\n        this._view.x = 0;\r\n        this._view.width = window.innerWidth;\r\n        this._view.height = window.innerHeight;\r\n    };\r\n    return Intermediate_MonsterHeadShading;\r\n})();\r\nwindow.onload = function () {\r\n    new Intermediate_MonsterHeadShading();\r\n};\r\n\r\n\n},{\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/events/Event\":undefined,\"awayjs-core/lib/events/LoaderEvent\":undefined,\"awayjs-core/lib/events/ProgressEvent\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/library/AssetLibrary\":undefined,\"awayjs-core/lib/library/AssetLoaderContext\":undefined,\"awayjs-core/lib/library/AssetType\":undefined,\"awayjs-core/lib/net/URLLoader\":undefined,\"awayjs-core/lib/net/URLLoaderDataFormat\":undefined,\"awayjs-core/lib/net/URLRequest\":undefined,\"awayjs-core/lib/parsers/ParserUtils\":undefined,\"awayjs-core/lib/textures/ImageTexture\":undefined,\"awayjs-core/lib/textures/SpecularBitmapTexture\":undefined,\"awayjs-core/lib/utils/RequestAnimationFrame\":undefined,\"awayjs-display/lib/containers/Scene\":undefined,\"awayjs-display/lib/containers/View\":undefined,\"awayjs-display/lib/controllers/HoverController\":undefined,\"awayjs-display/lib/entities/Camera\":undefined,\"awayjs-display/lib/entities/DirectionalLight\":undefined,\"awayjs-display/lib/entities/PointLight\":undefined,\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":undefined,\"awayjs-display/lib/utils/Cast\":undefined,\"awayjs-methodmaterials/lib/MethodMaterial\":undefined,\"awayjs-methodmaterials/lib/MethodMaterialMode\":undefined,\"awayjs-methodmaterials/lib/methods/ShadowSoftMethod\":undefined,\"awayjs-methodmaterials/lib/methods/SpecularFresnelMethod\":undefined,\"awayjs-methodmaterials/lib/pool/MethodRendererPool\":undefined,\"awayjs-parsers/lib/AWDParser\":undefined,\"awayjs-renderergl/lib/DefaultRenderer\":undefined}]},{},[1])\n\n\n//# sourceMappingURL=Intermediate_MonsterHeadShading.js.map"
  ],
  "sourceRoot": ""
}