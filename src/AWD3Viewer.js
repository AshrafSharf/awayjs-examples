/*

 AWD3 file loading example in AwayJS

 Demonstrates:

 How to use the Loader object to load an embedded internal awd model.

 Code by Rob Bateman
 rob@infiniteturtles.co.uk
 http://www.infiniteturtles.co.uk

 This code is distributed under the MIT License

 Copyright (c) The Away Foundation http://www.theawayfoundation.org

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the “Software”), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.

 */
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var AssetEvent = require("awayjs-core/lib/events/AssetEvent");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var OrthographicProjection = require("awayjs-core/lib/projections/OrthographicProjection");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var HoverController = require("awayjs-display/lib/controllers/HoverController");
var Loader = require("awayjs-display/lib/containers/Loader");
var RenderableNullSort = require("awayjs-display/lib/sort/RenderableNullSort");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var AWDParser = require("awayjs-parsers/lib/AWDParser");
var Partition2D = require("awayjs-player/lib/partition/Partition2D");
var MovieClip = require("awayjs-player/lib/display/MovieClip");
var CoordinateSystem = require("awayjs-core/lib/projections/CoordinateSystem");
var PerspectiveProjection = require("awayjs-core/lib/projections/PerspectiveProjection");
var Camera = require("awayjs-display/lib/entities/Camera");
var TextField = require("awayjs-display/lib/entities/TextField");
var AWD3Viewer = (function () {
    /**
     * Constructor
     */
    function AWD3Viewer() {
        this._time = 0;
        this.init();
    }
    /**
     * Global initialise function
     */
    AWD3Viewer.prototype.init = function () {
        this.initEngine();
        this.initObjects();
        this.initListeners();
    };
    /**
     * Initialise the engine
     */
    AWD3Viewer.prototype.initEngine = function () {
        //create the view
        this._view = new View(new DefaultRenderer());
        this._view.renderer.renderableSorter = new RenderableNullSort();
        this._view.backgroundColor = 0xffffff;
        //for plugin preview-runtime:
        //this._view.backgroundColor = parseInt(document.getElementById("bgColor").innerHTML.replace("#", "0x"));
        this._stage_width = 550; //parseInt(document.getElementById("awdWidth").innerHTML);
        this._stage_height = 400; //parseInt(document.getElementById("awdHeight").innerHTML);
        this._isperspective = true;
        this._projection = new PerspectiveProjection();
        this._projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;
        this._projection.focalLength = 1000;
        this._projection.preserveFocalLength = true;
        this._projection.originX = 0.5;
        this._projection.originY = 0.5;
        this._camera_perspective = new Camera();
        this._camera_perspective.projection = this._projection;
        //this._projection.far = 500000;
        this._hoverControl = new HoverController(this._camera_perspective, null, 180, 0, 1000);
        this._ortho_projection = new OrthographicProjection(500);
        this._ortho_projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;
        this._ortho_projection.far = 500000;
        this._ortho_projection.near = 0.1;
        this._ortho_projection.originX = 0.5;
        this._ortho_projection.originY = 0.5;
        this._camera_ortho = new Camera();
        this._camera_ortho.projection = this._ortho_projection;
        this._view.camera = this._camera_perspective;
        this._camera_ortho.x = 0;
        this._camera_ortho.y = 0;
        this._camera_ortho.scaleY = -1;
        this._camera_ortho.z = 0;
    };
    /**
     * Initialise the scene objects
     */
    AWD3Viewer.prototype.initObjects = function () {
        var _this = this;
        AssetLibrary.enableParser(AWDParser);
        //kickoff asset loading
        var loader = new Loader();
        loader.addEventListener(AssetEvent.ASSET_COMPLETE, function (event) { return _this.onAssetComplete(event); });
        loader.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onRessourceComplete(event); });
        //for plugin preview-runtime:
        //loader.load(new URLRequest(document.getElementById("awdPath").innerHTML));
        //loader.load(new URLRequest("assets/AWD3/AwayJEscher.awd"));
        //loader.load(new URLRequest("assets/AWD3/Simple_text_test.awd"));
        //loader.load(new URLRequest("assets/AWD3/AwayJS_Ninja.awd"));
        //loader.load(new URLRequest("assets/AWD3/ComplexShape.awd"));
        //loader.load(new URLRequest("assets/AWD3/NestedTween.awd"));
        //loader.load(new URLRequest("assets/AWD3/Rectancle_blink_test.awd"));
        //loader.load(new URLRequest("assets/AWD3/ScareCrow.awd"));
        //loader.load(new URLRequest("assets/AWD3/ScareCrow_shape_debug.awd"));
        //loader.load(new URLRequest("assets/AWD3/simple_bitmap_test.awd"));
        //loader.load(new URLRequest("assets/AWD3/Simple_mask_test.awd"));
        loader.load(new URLRequest("assets/AWD3/text_test_2.awd"));
    };
    /**
     * Initialise the listeners
     */
    AWD3Viewer.prototype.initListeners = function () {
        var _this = this;
        window.onresize = function (event) { return _this.onResize(event); };
        document.onkeydown = function (event) { return _this.onKeyDown(event); };
        document.onmousedown = function (event) { return _this.onMouseDown(event); };
        document.onmouseup = function (event) { return _this.onMouseUp(event); };
        document.onmousemove = function (event) { return _this.onMouseMove(event); };
        document.onmousewheel = function (event) { return _this.onMouseWheel(event); };
        this.onResize();
        this._timer = new RequestAnimationFrame(this.onEnterFrame, this);
        this._timer.start();
    };
    /**
     * loader listener for asset complete events
     */
    AWD3Viewer.prototype.onAssetComplete = function (event) {
        if (event.asset.isAsset(TextField)) {
        }
        if (event.asset.isAsset(MovieClip)) {
            this._rootTimeLine = event.asset;
            this._rootTimeLine.partition = new Partition2D(this._rootTimeLine);
        }
    };
    /**
     * loader listener for asset complete events
     */
    AWD3Viewer.prototype.onRessourceComplete = function (event) {
        if (this._rootTimeLine) {
            //console.log("LOADING A ROOT name = " + this._rootTimeLine.name + " duration=" + this._rootTimeLine.duration);
            this._view.scene.addChild(this._rootTimeLine);
            this._rootTimeLine.x = -this._stage_width / 2;
            this._rootTimeLine.y = -this._stage_height / 2;
        }
    };
    /**
     * Render loop
     */
    AWD3Viewer.prototype.onEnterFrame = function (dt) {
        this._time += dt;
        //update camera controler
        // this._cameraController.update();
        if (this._rootTimeLine != undefined) {
            //console.log("RENDER = ");
            this._rootTimeLine.update(dt);
        }
        //console.log("RENDER = ");
        //update view
        this._view.render();
    };
    AWD3Viewer.prototype.onKeyDown = function (event) {
        console.log("keycode = " + event.keyCode);
        if (event.keyCode == 80) {
            this._isperspective = true;
            this._view.camera = this._camera_perspective;
        }
        if (event.keyCode == 79) {
            this._isperspective = false;
            this._view.camera = this._camera_ortho;
        }
        if (event.keyCode == 81) {
            if (this._isperspective) {
                this._hoverControl.distance += 5;
            }
            else {
                this._ortho_projection.projectionHeight += 5;
            }
        }
        else if (event.keyCode == 87) {
            if (this._isperspective) {
                this._hoverControl.distance -= 5;
            }
            else {
                this._ortho_projection.projectionHeight -= 5;
            }
        }
        if (event.keyCode == 65) {
            if (this._isperspective) {
                this._hoverControl.distance += 50;
            }
            else {
                this._ortho_projection.projectionHeight += 50;
            }
        }
        else if (event.keyCode == 83) {
            if (this._isperspective) {
                this._hoverControl.distance -= 50;
            }
            else {
                this._ortho_projection.projectionHeight -= 50;
            }
        }
    };
    AWD3Viewer.prototype.onMouseDown = function (event) {
        this._lastPanAngle = this._hoverControl.panAngle;
        this._lastTiltAngle = this._hoverControl.tiltAngle;
        this._lastMouseX = event.clientX;
        this._lastMouseY = event.clientY;
        this._move = true;
    };
    AWD3Viewer.prototype.onMouseUp = function (event) {
        this._move = false;
    };
    AWD3Viewer.prototype.onMouseMove = function (event) {
        if (this._move) {
            if (this._isperspective) {
                this._hoverControl.panAngle = 0.3 * (event.clientX - this._lastMouseX) + this._lastPanAngle;
                this._hoverControl.tiltAngle = -0.3 * (event.clientY - this._lastMouseY) + this._lastTiltAngle;
            }
            else {
                if (event.clientX > (this._lastMouseX + 10))
                    this._camera_ortho.x -= 10;
                else if (event.clientX > this._lastMouseX)
                    this._camera_ortho.x--;
                else if (event.clientX < (this._lastMouseX - 10))
                    this._camera_ortho.x += 10;
                else if (event.clientX < this._lastMouseX)
                    this._camera_ortho.x++;
                if (event.clientY > (this._lastMouseY + 10))
                    this._camera_ortho.y -= 10;
                else if (event.clientY > this._lastMouseY)
                    this._camera_ortho.y--;
                else if (event.clientY < (this._lastMouseY - 10))
                    this._camera_ortho.y += 10;
                else if (event.clientY < this._lastMouseY)
                    this._camera_ortho.y++;
                this._lastMouseX = event.clientX;
                this._lastMouseY = event.clientY;
            }
        }
    };
    AWD3Viewer.prototype.onMouseWheel = function (event) {
        if (this._isperspective) {
            this._hoverControl.distance -= event.wheelDelta * 5;
            if (this._hoverControl.distance < 100) {
                this._hoverControl.distance = 100;
            }
        }
        else {
            this._ortho_projection.projectionHeight -= event.wheelDelta * 5;
            if (this._ortho_projection.projectionHeight < 5) {
                this._ortho_projection.projectionHeight = 5;
            }
        }
    };
    AWD3Viewer.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    return AWD3Viewer;
})();
window.onload = function () {
    new AWD3Viewer();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BV0QzVmlld2VyLnRzIl0sIm5hbWVzIjpbIkFXRDNWaWV3ZXIiLCJBV0QzVmlld2VyLmNvbnN0cnVjdG9yIiwiQVdEM1ZpZXdlci5pbml0IiwiQVdEM1ZpZXdlci5pbml0RW5naW5lIiwiQVdEM1ZpZXdlci5pbml0T2JqZWN0cyIsIkFXRDNWaWV3ZXIuaW5pdExpc3RlbmVycyIsIkFXRDNWaWV3ZXIub25Bc3NldENvbXBsZXRlIiwiQVdEM1ZpZXdlci5vblJlc3NvdXJjZUNvbXBsZXRlIiwiQVdEM1ZpZXdlci5vbkVudGVyRnJhbWUiLCJBV0QzVmlld2VyLm9uS2V5RG93biIsIkFXRDNWaWV3ZXIub25Nb3VzZURvd24iLCJBV0QzVmlld2VyLm9uTW91c2VVcCIsIkFXRDNWaWV3ZXIub25Nb3VzZU1vdmUiLCJBV0QzVmlld2VyLm9uTW91c2VXaGVlbCIsIkFXRDNWaWV3ZXIub25SZXNpemUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0NHO0FBR0gsSUFBTyxZQUFZLFdBQWUsc0NBQXNDLENBQUMsQ0FBQztBQUMxRSxJQUFPLFVBQVUsV0FBZSxtQ0FBbUMsQ0FBQyxDQUFDO0FBQ3JFLElBQU8sVUFBVSxXQUFlLGdDQUFnQyxDQUFDLENBQUM7QUFDbEUsSUFBTyxXQUFXLFdBQWUsb0NBQW9DLENBQUMsQ0FBQztBQUd2RSxJQUFPLHNCQUFzQixXQUFZLG9EQUFvRCxDQUFDLENBQUM7QUFFL0YsSUFBTyxxQkFBcUIsV0FBWSw2Q0FBNkMsQ0FBQyxDQUFDO0FBRXZGLElBQU8sSUFBSSxXQUFpQixvQ0FBb0MsQ0FBQyxDQUFDO0FBR2xFLElBQU8sZUFBZSxXQUFjLGdEQUFnRCxDQUFDLENBQUM7QUFDdEYsSUFBTyxNQUFNLFdBQWdCLHNDQUFzQyxDQUFDLENBQUM7QUFFckUsSUFBTyxrQkFBa0IsV0FBYSw0Q0FBNEMsQ0FBQyxDQUFDO0FBR3BGLElBQU8sZUFBZSxXQUFjLHVDQUF1QyxDQUFDLENBQUM7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O0lBQ0ZBLENBQUNBO0lBRU9iLDZCQUFRQSxHQUFoQkEsVUFBaUJBLEtBQVlBO1FBQVpjLHFCQUFZQSxHQUFaQSxZQUFZQTtRQUU1QkEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsR0FBV0EsQ0FBQ0EsQ0FBQ0E7UUFDekJBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLEdBQVdBLENBQUNBLENBQUNBO1FBQ3pCQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxLQUFLQSxHQUFPQSxNQUFNQSxDQUFDQSxVQUFVQSxDQUFDQTtRQUN6Q0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsTUFBTUEsR0FBTUEsTUFBTUEsQ0FBQ0EsV0FBV0EsQ0FBQ0E7SUFDM0NBLENBQUNBO0lBRUZkLGlCQUFDQTtBQUFEQSxDQXZTQSxBQXVTQ0EsSUFBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLEdBQUc7SUFDZixJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyIsImZpbGUiOiJBV0QzVmlld2VyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlc0NvbnRlbnQiOlsiLypcblxuIEFXRDMgZmlsZSBsb2FkaW5nIGV4YW1wbGUgaW4gQXdheUpTXG5cbiBEZW1vbnN0cmF0ZXM6XG5cbiBIb3cgdG8gdXNlIHRoZSBMb2FkZXIgb2JqZWN0IHRvIGxvYWQgYW4gZW1iZWRkZWQgaW50ZXJuYWwgYXdkIG1vZGVsLlxuXG4gQ29kZSBieSBSb2IgQmF0ZW1hblxuIHJvYkBpbmZpbml0ZXR1cnRsZXMuY28udWtcbiBodHRwOi8vd3d3LmluZmluaXRldHVydGxlcy5jby51a1xuXG4gVGhpcyBjb2RlIGlzIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgTGljZW5zZVxuXG4gQ29weXJpZ2h0IChjKSBUaGUgQXdheSBGb3VuZGF0aW9uIGh0dHA6Ly93d3cudGhlYXdheWZvdW5kYXRpb24ub3JnXG5cbiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUg4oCcU29mdHdhcmXigJ0pLCB0byBkZWFsXG4gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG4gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCDigJxBUyBJU+KAnSwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbiBUSEUgU09GVFdBUkUuXG5cbiAqL1xuXG5pbXBvcnQgR2VvbWV0cnlcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZGF0YS9HZW9tZXRyeVwiKTtcbmltcG9ydCBBc3NldExpYnJhcnlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvQXNzZXRMaWJyYXJ5XCIpO1xuaW1wb3J0IEFzc2V0RXZlbnRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2V2ZW50cy9Bc3NldEV2ZW50XCIpO1xuaW1wb3J0IFVSTFJlcXVlc3RcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL25ldC9VUkxSZXF1ZXN0XCIpO1xuaW1wb3J0IExvYWRlckV2ZW50XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9ldmVudHMvTG9hZGVyRXZlbnRcIik7XG5pbXBvcnQgVmVjdG9yM0RcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9WZWN0b3IzRFwiKTtcbmltcG9ydCBPcnRob2dyYXBoaWNPZmZDZW50ZXJQcm9qZWN0aW9uXHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9wcm9qZWN0aW9ucy9PcnRob2dyYXBoaWNPZmZDZW50ZXJQcm9qZWN0aW9uXCIpO1xuaW1wb3J0IE9ydGhvZ3JhcGhpY1Byb2plY3Rpb25cdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3Byb2plY3Rpb25zL09ydGhvZ3JhcGhpY1Byb2plY3Rpb25cIik7XG5pbXBvcnQgS2V5Ym9hcmRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdWkvS2V5Ym9hcmRcIik7XG5pbXBvcnQgUmVxdWVzdEFuaW1hdGlvbkZyYW1lXHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi91dGlscy9SZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIik7XG5cbmltcG9ydCBWaWV3XHRcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9WaWV3XCIpO1xuaW1wb3J0IE1lc2hcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9NZXNoXCIpO1xuaW1wb3J0IENvbnRhaW5lclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9EaXNwbGF5T2JqZWN0Q29udGFpbmVyXCIpO1xuaW1wb3J0IEhvdmVyQ29udHJvbGxlclx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2NvbnRyb2xsZXJzL0hvdmVyQ29udHJvbGxlclwiKTtcbmltcG9ydCBMb2FkZXJcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvY29udGFpbmVycy9Mb2FkZXJcIik7XG5pbXBvcnQgQ29sb3JNYXRlcmlhbFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL21hdGVyaWFscy9CYXNpY01hdGVyaWFsXCIpO1xuaW1wb3J0IFJlbmRlcmFibGVOdWxsU29ydFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9zb3J0L1JlbmRlcmFibGVOdWxsU29ydFwiKTtcbmltcG9ydCBQcmltaXRpdmVDdWJlUHJlZmFiXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL3ByZWZhYnMvUHJpbWl0aXZlQ3ViZVByZWZhYlwiKTtcblxuaW1wb3J0IERlZmF1bHRSZW5kZXJlclx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXJlbmRlcmVyZ2wvbGliL0RlZmF1bHRSZW5kZXJlclwiKTtcblxuaW1wb3J0IE1ldGhvZE1hdGVyaWFsXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtbWV0aG9kbWF0ZXJpYWxzL2xpYi9NZXRob2RNYXRlcmlhbFwiKTtcbmltcG9ydCBNZXRob2RSZW5kZXJlclBvb2xcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtbWV0aG9kbWF0ZXJpYWxzL2xpYi9wb29sL01ldGhvZFJlbmRlcmVyUG9vbFwiKTtcblxuaW1wb3J0IEFXRFBhcnNlclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcGFyc2Vycy9saWIvQVdEUGFyc2VyXCIpO1xuaW1wb3J0IFBhcnRpdGlvbjJEXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1wbGF5ZXIvbGliL3BhcnRpdGlvbi9QYXJ0aXRpb24yRFwiKTtcbmltcG9ydCBNb3ZpZUNsaXBcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXBsYXllci9saWIvZGlzcGxheS9Nb3ZpZUNsaXBcIik7XG5cbmltcG9ydCBDb29yZGluYXRlU3lzdGVtXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvcHJvamVjdGlvbnMvQ29vcmRpbmF0ZVN5c3RlbVwiKTtcbmltcG9ydCBQZXJzcGVjdGl2ZVByb2plY3Rpb25cdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3Byb2plY3Rpb25zL1BlcnNwZWN0aXZlUHJvamVjdGlvblwiKTtcbmltcG9ydCBDYW1lcmFcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZW50aXRpZXMvQ2FtZXJhXCIpO1xuXG5pbXBvcnQgVGV4dEZpZWxkXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2VudGl0aWVzL1RleHRGaWVsZFwiKTtcbmltcG9ydCBUZXh0Rm9ybWF0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL3RleHQvVGV4dEZvcm1hdFwiKTtcblxuY2xhc3MgQVdEM1ZpZXdlclxue1xuXHQvL2VuZ2luZSB2YXJpYWJsZXNcblx0cHJpdmF0ZSBfdmlldzogVmlldztcblxuXHRwcml2YXRlIF9yb290VGltZUxpbmU6IE1vdmllQ2xpcDtcblxuXHRwcml2YXRlIF90aW1lcjogUmVxdWVzdEFuaW1hdGlvbkZyYW1lO1xuXHRwcml2YXRlIF90aW1lOiBudW1iZXIgPSAwO1xuXG5cdC8vbmF2aWdhdGlvblxuXHRwcml2YXRlIF9sYXN0UGFuQW5nbGU6IG51bWJlcjtcblx0cHJpdmF0ZSBfbGFzdFRpbHRBbmdsZTogbnVtYmVyO1xuXHRwcml2YXRlIF9sYXN0TW91c2VYOiBudW1iZXI7XG5cdHByaXZhdGUgX2xhc3RNb3VzZVk6IG51bWJlcjtcblx0cHJpdmF0ZSBfbW92ZTogYm9vbGVhbjtcblx0cHJpdmF0ZSBfaXNwZXJzcGVjdGl2ZTogYm9vbGVhbjtcblx0cHJpdmF0ZSBfcHJvamVjdGlvbjogUGVyc3BlY3RpdmVQcm9qZWN0aW9uO1xuXHRwcml2YXRlIF9vcnRob19wcm9qZWN0aW9uOiBPcnRob2dyYXBoaWNQcm9qZWN0aW9uO1xuXHRwcml2YXRlIF9ob3ZlckNvbnRyb2w6IEhvdmVyQ29udHJvbGxlcjtcblx0cHJpdmF0ZSBfY2FtZXJhX3BlcnNwZWN0aXZlOiBDYW1lcmE7XG5cdHByaXZhdGUgX2NhbWVyYV9vcnRobzogQ2FtZXJhO1xuXHRwcml2YXRlIF9zdGFnZV93aWR0aDogbnVtYmVyO1xuXHRwcml2YXRlIF9zdGFnZV9oZWlnaHQ6IG51bWJlcjtcblxuXHQvKipcblx0ICogQ29uc3RydWN0b3Jcblx0ICovXG5cdGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHRoaXMuaW5pdCgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEdsb2JhbCBpbml0aWFsaXNlIGZ1bmN0aW9uXG5cdCAqL1xuXHRwcml2YXRlIGluaXQoKTogdm9pZFxuXHR7XG5cdFx0dGhpcy5pbml0RW5naW5lKCk7XG5cdFx0dGhpcy5pbml0T2JqZWN0cygpO1xuXHRcdHRoaXMuaW5pdExpc3RlbmVycygpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEluaXRpYWxpc2UgdGhlIGVuZ2luZVxuXHQgKi9cblx0cHJpdmF0ZSBpbml0RW5naW5lKCk6IHZvaWRcblx0e1xuXHRcdC8vY3JlYXRlIHRoZSB2aWV3XG5cdFx0dGhpcy5fdmlldyA9IG5ldyBWaWV3KG5ldyBEZWZhdWx0UmVuZGVyZXIoKSk7XG5cdFx0dGhpcy5fdmlldy5yZW5kZXJlci5yZW5kZXJhYmxlU29ydGVyID0gbmV3IFJlbmRlcmFibGVOdWxsU29ydCgpO1xuXHRcdHRoaXMuX3ZpZXcuYmFja2dyb3VuZENvbG9yID0gMHhmZmZmZmY7XG5cblx0XHQvL2ZvciBwbHVnaW4gcHJldmlldy1ydW50aW1lOlxuXHRcdC8vdGhpcy5fdmlldy5iYWNrZ3JvdW5kQ29sb3IgPSBwYXJzZUludChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJnQ29sb3JcIikuaW5uZXJIVE1MLnJlcGxhY2UoXCIjXCIsIFwiMHhcIikpO1xuXHRcdHRoaXMuX3N0YWdlX3dpZHRoID0gNTUwOyAvL3BhcnNlSW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXdkV2lkdGhcIikuaW5uZXJIVE1MKTtcblx0XHR0aGlzLl9zdGFnZV9oZWlnaHQgPSA0MDA7IC8vcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhd2RIZWlnaHRcIikuaW5uZXJIVE1MKTtcblxuXHRcdHRoaXMuX2lzcGVyc3BlY3RpdmU9dHJ1ZTtcblx0XHR0aGlzLl9wcm9qZWN0aW9uID0gbmV3IFBlcnNwZWN0aXZlUHJvamVjdGlvbigpO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24uY29vcmRpbmF0ZVN5c3RlbSA9IENvb3JkaW5hdGVTeXN0ZW0uUklHSFRfSEFOREVEO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24uZm9jYWxMZW5ndGggPSAxMDAwO1xuXHRcdHRoaXMuX3Byb2plY3Rpb24ucHJlc2VydmVGb2NhbExlbmd0aCA9IHRydWU7XG5cdFx0dGhpcy5fcHJvamVjdGlvbi5vcmlnaW5YID0gMC41O1xuXHRcdHRoaXMuX3Byb2plY3Rpb24ub3JpZ2luWSA9IDAuNTtcblx0XHR0aGlzLl9jYW1lcmFfcGVyc3BlY3RpdmUgPSBuZXcgQ2FtZXJhKCk7XG5cdFx0dGhpcy5fY2FtZXJhX3BlcnNwZWN0aXZlLnByb2plY3Rpb24gPSB0aGlzLl9wcm9qZWN0aW9uO1xuXHRcdC8vdGhpcy5fcHJvamVjdGlvbi5mYXIgPSA1MDAwMDA7XG5cdFx0dGhpcy5faG92ZXJDb250cm9sID0gbmV3IEhvdmVyQ29udHJvbGxlcih0aGlzLl9jYW1lcmFfcGVyc3BlY3RpdmUsIG51bGwsIDE4MCwgMCwgMTAwMCk7XG5cdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbiA9IG5ldyBPcnRob2dyYXBoaWNQcm9qZWN0aW9uKDUwMCk7XG5cdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5jb29yZGluYXRlU3lzdGVtID0gQ29vcmRpbmF0ZVN5c3RlbS5SSUdIVF9IQU5ERUQ7XG5cdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5mYXIgPSA1MDAwMDA7XG5cdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5uZWFyID0gMC4xO1xuXHRcdHRoaXMuX29ydGhvX3Byb2plY3Rpb24ub3JpZ2luWCA9IDAuNTtcblx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLm9yaWdpblkgPSAwLjU7XG5cdFx0dGhpcy5fY2FtZXJhX29ydGhvID0gbmV3IENhbWVyYSgpO1xuXHRcdHRoaXMuX2NhbWVyYV9vcnRoby5wcm9qZWN0aW9uID0gdGhpcy5fb3J0aG9fcHJvamVjdGlvbjtcblx0XHR0aGlzLl92aWV3LmNhbWVyYSA9IHRoaXMuX2NhbWVyYV9wZXJzcGVjdGl2ZTtcblx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueCA9IDA7XG5cdFx0dGhpcy5fY2FtZXJhX29ydGhvLnkgPSAwO1xuXHRcdHRoaXMuX2NhbWVyYV9vcnRoby5zY2FsZVkgPSAtMTtcblx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueiA9IDA7XG5cdH1cblxuXHQvKipcblx0ICogSW5pdGlhbGlzZSB0aGUgc2NlbmUgb2JqZWN0c1xuXHQgKi9cblx0cHJpdmF0ZSBpbml0T2JqZWN0cygpOiB2b2lkXG5cdHtcblx0XHRBc3NldExpYnJhcnkuZW5hYmxlUGFyc2VyKEFXRFBhcnNlcik7XG5cblx0XHQvL2tpY2tvZmYgYXNzZXQgbG9hZGluZ1xuXHRcdHZhciBsb2FkZXI6TG9hZGVyID0gbmV3IExvYWRlcigpO1xuXHRcdGxvYWRlci5hZGRFdmVudExpc3RlbmVyKEFzc2V0RXZlbnQuQVNTRVRfQ09NUExFVEUsIChldmVudDogQXNzZXRFdmVudCkgPT4gdGhpcy5vbkFzc2V0Q29tcGxldGUoZXZlbnQpKTtcblx0XHRsb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcihMb2FkZXJFdmVudC5SRVNPVVJDRV9DT01QTEVURSwgKGV2ZW50OiBMb2FkZXJFdmVudCkgPT4gdGhpcy5vblJlc3NvdXJjZUNvbXBsZXRlKGV2ZW50KSk7XG5cblx0XHQvL2ZvciBwbHVnaW4gcHJldmlldy1ydW50aW1lOlxuXHRcdC8vbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhd2RQYXRoXCIpLmlubmVySFRNTCkpO1xuXG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChcImFzc2V0cy9BV0QzL0F3YXlKRXNjaGVyLmF3ZFwiKSk7XG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChcImFzc2V0cy9BV0QzL1NpbXBsZV90ZXh0X3Rlc3QuYXdkXCIpKTtcblx0XHQvL2xvYWRlci5sb2FkKG5ldyBVUkxSZXF1ZXN0KFwiYXNzZXRzL0FXRDMvQXdheUpTX05pbmphLmF3ZFwiKSk7XG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChcImFzc2V0cy9BV0QzL0NvbXBsZXhTaGFwZS5hd2RcIikpO1xuXHRcdC8vbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9OZXN0ZWRUd2Vlbi5hd2RcIikpO1xuXHRcdC8vbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9SZWN0YW5jbGVfYmxpbmtfdGVzdC5hd2RcIikpO1xuXHRcdC8vbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9TY2FyZUNyb3cuYXdkXCIpKTtcblx0XHQvL2xvYWRlci5sb2FkKG5ldyBVUkxSZXF1ZXN0KFwiYXNzZXRzL0FXRDMvU2NhcmVDcm93X3NoYXBlX2RlYnVnLmF3ZFwiKSk7XG5cdFx0Ly9sb2FkZXIubG9hZChuZXcgVVJMUmVxdWVzdChcImFzc2V0cy9BV0QzL3NpbXBsZV9iaXRtYXBfdGVzdC5hd2RcIikpO1xuXHRcdC8vbG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy9TaW1wbGVfbWFza190ZXN0LmF3ZFwiKSk7XG5cdFx0bG9hZGVyLmxvYWQobmV3IFVSTFJlcXVlc3QoXCJhc3NldHMvQVdEMy90ZXh0X3Rlc3RfMi5hd2RcIikpO1xuXG5cdH1cblxuXHQvKipcblx0ICogSW5pdGlhbGlzZSB0aGUgbGlzdGVuZXJzXG5cdCAqL1xuXHRwcml2YXRlIGluaXRMaXN0ZW5lcnMoKTogdm9pZFxuXHR7XG5cdFx0d2luZG93Lm9ucmVzaXplICA9IChldmVudCkgPT4gdGhpcy5vblJlc2l6ZShldmVudCk7XG5cblx0XHRkb2N1bWVudC5vbmtleWRvd24gPSAoZXZlbnQpID0+IHRoaXMub25LZXlEb3duKGV2ZW50KTtcblx0XHRkb2N1bWVudC5vbm1vdXNlZG93biA9IChldmVudCkgPT4gdGhpcy5vbk1vdXNlRG93bihldmVudCk7XG5cdFx0ZG9jdW1lbnQub25tb3VzZXVwID0gKGV2ZW50KSA9PiB0aGlzLm9uTW91c2VVcChldmVudCk7XG5cdFx0ZG9jdW1lbnQub25tb3VzZW1vdmUgPSAoZXZlbnQpID0+IHRoaXMub25Nb3VzZU1vdmUoZXZlbnQpO1xuXHRcdGRvY3VtZW50Lm9ubW91c2V3aGVlbCA9IChldmVudCkgPT4gdGhpcy5vbk1vdXNlV2hlZWwoZXZlbnQpO1xuXG5cdFx0dGhpcy5vblJlc2l6ZSgpO1xuXG5cdFx0dGhpcy5fdGltZXIgPSBuZXcgUmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMub25FbnRlckZyYW1lLCB0aGlzKTtcblx0XHR0aGlzLl90aW1lci5zdGFydCgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIGxvYWRlciBsaXN0ZW5lciBmb3IgYXNzZXQgY29tcGxldGUgZXZlbnRzXG5cdCAqL1xuXHRwcml2YXRlIG9uQXNzZXRDb21wbGV0ZShldmVudDogQXNzZXRFdmVudCk6IHZvaWRcblx0e1xuXG5cdFx0aWYoZXZlbnQuYXNzZXQuaXNBc3NldChUZXh0RmllbGQpKSB7XG5cdFx0XHQvL3ZhciBvbmVfdGV4dGZpZWxkOlRleHRGaWVsZD08VGV4dEZpZWxkPiBldmVudC5hc3NldDtcblx0XHRcdC8vY29uc29sZS5sb2coXCJvcmdpbmFsIHRleHRmaWVsZF90ZXh0ID0gXCIrb25lX3RleHRmaWVsZC50ZXh0KTtcblx0XHRcdC8vb25lX3RleHRmaWVsZC50ZXh0PVwibmV3IHRleHRcIjtcblx0XHR9XG5cblx0XHRpZihldmVudC5hc3NldC5pc0Fzc2V0KE1vdmllQ2xpcCkpIHtcblx0XHRcdHRoaXMuX3Jvb3RUaW1lTGluZSA9IDxNb3ZpZUNsaXA+IGV2ZW50LmFzc2V0O1xuXHRcdFx0dGhpcy5fcm9vdFRpbWVMaW5lLnBhcnRpdGlvbiA9IG5ldyBQYXJ0aXRpb24yRCh0aGlzLl9yb290VGltZUxpbmUpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBsb2FkZXIgbGlzdGVuZXIgZm9yIGFzc2V0IGNvbXBsZXRlIGV2ZW50c1xuXHQgKi9cblx0cHJpdmF0ZSBvblJlc3NvdXJjZUNvbXBsZXRlKGV2ZW50OiBMb2FkZXJFdmVudCk6IHZvaWQge1xuXHRcdGlmICh0aGlzLl9yb290VGltZUxpbmUpIHtcblx0XHRcdC8vY29uc29sZS5sb2coXCJMT0FESU5HIEEgUk9PVCBuYW1lID0gXCIgKyB0aGlzLl9yb290VGltZUxpbmUubmFtZSArIFwiIGR1cmF0aW9uPVwiICsgdGhpcy5fcm9vdFRpbWVMaW5lLmR1cmF0aW9uKTtcblx0XHRcdHRoaXMuX3ZpZXcuc2NlbmUuYWRkQ2hpbGQodGhpcy5fcm9vdFRpbWVMaW5lKTtcblx0XHRcdHRoaXMuX3Jvb3RUaW1lTGluZS54PS10aGlzLl9zdGFnZV93aWR0aC8yO1xuXHRcdFx0dGhpcy5fcm9vdFRpbWVMaW5lLnk9LXRoaXMuX3N0YWdlX2hlaWdodC8yO1xuXHRcdFx0Ly8gYXV0b3BsYXkgbGlrZSBpbiBGbGFzaFxuXHRcdFx0Ly90aGlzLl9yb290VGltZUxpbmUucGxheSgpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSZW5kZXIgbG9vcFxuXHQgKi9cblx0cHJpdmF0ZSBvbkVudGVyRnJhbWUoZHQ6IG51bWJlcik6IHZvaWQge1xuXHRcdHRoaXMuX3RpbWUgKz0gZHQ7XG5cblx0XHQvL3VwZGF0ZSBjYW1lcmEgY29udHJvbGVyXG5cdFx0Ly8gdGhpcy5fY2FtZXJhQ29udHJvbGxlci51cGRhdGUoKTtcblxuXHRcdGlmICh0aGlzLl9yb290VGltZUxpbmUgIT0gdW5kZWZpbmVkKSB7XG5cdFx0XHQvL2NvbnNvbGUubG9nKFwiUkVOREVSID0gXCIpO1xuXHRcdFx0dGhpcy5fcm9vdFRpbWVMaW5lLnVwZGF0ZShkdCk7XG5cdFx0fVxuXHRcdC8vY29uc29sZS5sb2coXCJSRU5ERVIgPSBcIik7XG5cdFx0Ly91cGRhdGUgdmlld1xuXHRcdHRoaXMuX3ZpZXcucmVuZGVyKCk7XG5cdH1cblxuXHRwcml2YXRlIG9uS2V5RG93bihldmVudCk6IHZvaWQge1xuXHRcdGNvbnNvbGUubG9nKFwia2V5Y29kZSA9IFwiK2V2ZW50LmtleUNvZGUpO1xuXHRcdGlmIChldmVudC5rZXlDb2RlID09IDgwKSB7XG5cdFx0XHR0aGlzLl9pc3BlcnNwZWN0aXZlID0gdHJ1ZTtcblx0XHRcdHRoaXMuX3ZpZXcuY2FtZXJhID0gdGhpcy5fY2FtZXJhX3BlcnNwZWN0aXZlO1xuXHRcdH1cblx0XHRpZiAoZXZlbnQua2V5Q29kZSA9PSA3OSkge1xuXHRcdFx0dGhpcy5faXNwZXJzcGVjdGl2ZSA9IGZhbHNlO1xuXHRcdFx0dGhpcy5fdmlldy5jYW1lcmEgPSB0aGlzLl9jYW1lcmFfb3J0aG87XG5cdFx0fVxuXHRcdGlmIChldmVudC5rZXlDb2RlID09IDgxKSB7XG5cdFx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgKz0gNTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLl9vcnRob19wcm9qZWN0aW9uLnByb2plY3Rpb25IZWlnaHQgKz0gNTtcblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSBpZiAoZXZlbnQua2V5Q29kZSA9PSA4Nykge1xuXHRcdFx0aWYgKHRoaXMuX2lzcGVyc3BlY3RpdmUpIHtcblx0XHRcdFx0dGhpcy5faG92ZXJDb250cm9sLmRpc3RhbmNlIC09IDU7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0IC09IDU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChldmVudC5rZXlDb2RlID09IDY1KSB7XG5cdFx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgKz0gNTA7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0ICs9IDUwO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRlbHNlIGlmIChldmVudC5rZXlDb2RlID09IDgzKSB7XG5cdFx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgLT0gNTA7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0IC09IDUwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgb25Nb3VzZURvd24oZXZlbnQpOiB2b2lkXG5cdHtcblx0XHR0aGlzLl9sYXN0UGFuQW5nbGUgPSB0aGlzLl9ob3ZlckNvbnRyb2wucGFuQW5nbGU7XG5cdFx0dGhpcy5fbGFzdFRpbHRBbmdsZSA9IHRoaXMuX2hvdmVyQ29udHJvbC50aWx0QW5nbGU7XG5cdFx0dGhpcy5fbGFzdE1vdXNlWCA9IGV2ZW50LmNsaWVudFg7XG5cdFx0dGhpcy5fbGFzdE1vdXNlWSA9IGV2ZW50LmNsaWVudFk7XG5cdFx0dGhpcy5fbW92ZSA9IHRydWU7XG5cdH1cblxuXHRwcml2YXRlIG9uTW91c2VVcChldmVudCk6IHZvaWRcblx0e1xuXHRcdHRoaXMuX21vdmUgPSBmYWxzZTtcblx0fVxuXG5cdHByaXZhdGUgb25Nb3VzZU1vdmUoZXZlbnQpXG5cdHtcblx0XHRpZiAodGhpcy5fbW92ZSkge1xuXHRcdFx0aWYgKHRoaXMuX2lzcGVyc3BlY3RpdmUpIHtcblx0XHRcdFx0dGhpcy5faG92ZXJDb250cm9sLnBhbkFuZ2xlID0gMC4zICogKGV2ZW50LmNsaWVudFggLSB0aGlzLl9sYXN0TW91c2VYKSArIHRoaXMuX2xhc3RQYW5BbmdsZTtcblx0XHRcdFx0dGhpcy5faG92ZXJDb250cm9sLnRpbHRBbmdsZSA9IC0wLjMgKiAoZXZlbnQuY2xpZW50WSAtIHRoaXMuX2xhc3RNb3VzZVkpICsgdGhpcy5fbGFzdFRpbHRBbmdsZTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRpZiAoZXZlbnQuY2xpZW50WCA+ICh0aGlzLl9sYXN0TW91c2VYICsgMTApKVxuXHRcdFx0XHRcdHRoaXMuX2NhbWVyYV9vcnRoby54IC09IDEwO1xuXHRcdFx0XHRlbHNlIGlmIChldmVudC5jbGllbnRYID4gdGhpcy5fbGFzdE1vdXNlWClcblx0XHRcdFx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueC0tO1xuXHRcdFx0XHRlbHNlIGlmIChldmVudC5jbGllbnRYIDwgKHRoaXMuX2xhc3RNb3VzZVggLSAxMCkpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLnggKz0gMTA7XG5cdFx0XHRcdGVsc2UgaWYgKGV2ZW50LmNsaWVudFggPCB0aGlzLl9sYXN0TW91c2VYKVxuXHRcdFx0XHRcdHRoaXMuX2NhbWVyYV9vcnRoby54Kys7XG5cdFx0XHRcdGlmIChldmVudC5jbGllbnRZID4gKHRoaXMuX2xhc3RNb3VzZVkgKyAxMCkpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLnkgLT0gMTA7XG5cdFx0XHRcdGVsc2UgaWYgKGV2ZW50LmNsaWVudFkgPiB0aGlzLl9sYXN0TW91c2VZKVxuXHRcdFx0XHRcdHRoaXMuX2NhbWVyYV9vcnRoby55LS07XG5cdFx0XHRcdGVsc2UgaWYgKGV2ZW50LmNsaWVudFkgPCAodGhpcy5fbGFzdE1vdXNlWSAtIDEwKSlcblx0XHRcdFx0XHR0aGlzLl9jYW1lcmFfb3J0aG8ueSArPSAxMDtcblx0XHRcdFx0ZWxzZSBpZiAoZXZlbnQuY2xpZW50WSA8IHRoaXMuX2xhc3RNb3VzZVkpXG5cdFx0XHRcdFx0dGhpcy5fY2FtZXJhX29ydGhvLnkrKztcblx0XHRcdFx0dGhpcy5fbGFzdE1vdXNlWCA9IGV2ZW50LmNsaWVudFg7XG5cdFx0XHRcdHRoaXMuX2xhc3RNb3VzZVkgPSBldmVudC5jbGllbnRZO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgb25Nb3VzZVdoZWVsKGV2ZW50KTogdm9pZFxuXHR7XG5cblx0XHRpZiAodGhpcy5faXNwZXJzcGVjdGl2ZSkge1xuXHRcdFx0dGhpcy5faG92ZXJDb250cm9sLmRpc3RhbmNlIC09IGV2ZW50LndoZWVsRGVsdGEgKiA1O1xuXHRcdFx0aWYgKHRoaXMuX2hvdmVyQ29udHJvbC5kaXN0YW5jZSA8IDEwMCkge1xuXHRcdFx0XHR0aGlzLl9ob3ZlckNvbnRyb2wuZGlzdGFuY2UgPSAxMDA7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0IC09IGV2ZW50LndoZWVsRGVsdGEgKiA1O1xuXHRcdFx0aWYgKHRoaXMuX29ydGhvX3Byb2plY3Rpb24ucHJvamVjdGlvbkhlaWdodCA8IDUpIHtcblx0XHRcdFx0dGhpcy5fb3J0aG9fcHJvamVjdGlvbi5wcm9qZWN0aW9uSGVpZ2h0ID0gNTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIG9uUmVzaXplKGV2ZW50ID0gbnVsbCk6IHZvaWRcblx0e1xuXHRcdHRoaXMuX3ZpZXcueSAgICAgICAgID0gMDtcblx0XHR0aGlzLl92aWV3LnggICAgICAgICA9IDA7XG5cdFx0dGhpcy5fdmlldy53aWR0aCAgICAgPSB3aW5kb3cuaW5uZXJXaWR0aDtcblx0XHR0aGlzLl92aWV3LmhlaWdodCAgICA9IHdpbmRvdy5pbm5lckhlaWdodDtcblx0fVxuXG59XG5cbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG5cdG5ldyBBV0QzVmlld2VyKCk7XG59O1xuIl19