var AwayEvent = require("awayjs-core/lib/events/Event");
var URLLoader = require("awayjs-core/lib/net/URLLoader");
var URLLoaderDataFormat = require("awayjs-core/lib/net/URLLoaderDataFormat");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var ParserUtils = require("awayjs-core/lib/parsers/ParserUtils");
var ImageTexture = require("awayjs-core/lib/textures/ImageTexture");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var DirectionalLight = require("awayjs-display/lib/entities/DirectionalLight");
var PrimitiveTorusPrefab = require("awayjs-display/lib/prefabs/PrimitiveTorusPrefab");
var StaticLightPicker = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodMaterial = require("awayjs-methodmaterials/lib/MethodMaterial");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var TorusPrimitive = (function () {
    function TorusPrimitive() {
        var _this = this;
        this.initView();
        this._raf = new RequestAnimationFrame(this.render, this);
        this._raf.start();
        this.loadResources();
        window.onresize = function (event) { return _this.onResize(event); };
        this.onResize();
    }
    /**
     *
     */
    TorusPrimitive.prototype.initView = function () {
        this._view = new View(new DefaultRenderer(MethodRendererPool)); // Create the Away3D View
        this._view.backgroundColor = 0x000000; // Change the background color to black
    };
    /**
     *
     */
    TorusPrimitive.prototype.loadResources = function () {
        var _this = this;
        var imgLoader = new URLLoader();
        imgLoader.dataFormat = URLLoaderDataFormat.BLOB;
        imgLoader.addEventListener(AwayEvent.COMPLETE, function (event) { return _this.urlCompleteHandler(event); });
        imgLoader.load(new URLRequest("assets/dots.png"));
    };
    /**
     *
     * @param event
     */
    TorusPrimitive.prototype.urlCompleteHandler = function (event) {
        var _this = this;
        this._image = ParserUtils.blobToImage(event.target.data);
        this._image.onload = function (event) { return _this.imageCompleteHandler(event); };
    };
    /**
     *
     */
    TorusPrimitive.prototype.initLights = function () {
        this._light = new DirectionalLight();
        this._light.diffuse = .7;
        this._light.specular = 1;
        this._view.scene.addChild(this._light);
        this._lightPicker = new StaticLightPicker([this._light]);
    };
    /**
     *
     */
    TorusPrimitive.prototype.initMaterial = function (image) {
        this._texture = new ImageTexture(image);
        this._material = new MethodMaterial(this._texture, true, true, false);
        this._material.lightPicker = this._lightPicker;
    };
    /**
     *
     */
    TorusPrimitive.prototype.initTorus = function () {
        this._torus = new PrimitiveTorusPrefab(220, 80, 32, 16, false);
        this._mesh = this._torus.getNewObject();
        this._mesh.material = this._material;
        this._view.scene.addChild(this._mesh);
    };
    /**
     *
     */
    TorusPrimitive.prototype.imageCompleteHandler = function (event) {
        this.initLights();
        this.initMaterial(event.target);
        this.initTorus();
    };
    /**
     *
     */
    TorusPrimitive.prototype.render = function (dt) {
        if (dt === void 0) { dt = null; }
        if (this._mesh)
            this._mesh.rotationY += 1;
        this._view.render();
    };
    /**
     *
     */
    TorusPrimitive.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    return TorusPrimitive;
})();
window.onload = function () {
    new TorusPrimitive();
};

//# sourceMappingURL=data:application/json;base64,