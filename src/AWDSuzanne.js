var LoaderEvent = require("awayjs-core/lib/events/LoaderEvent");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var AssetLibrary = require("awayjs-core/lib/library/AssetLibrary");
var AssetType = require("awayjs-core/lib/library/AssetType");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var DirectionalLight = require("awayjs-display/lib/entities/DirectionalLight");
var MouseEvent = require("awayjs-display/lib/events/MouseEvent");
var StaticLightPicker = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var DefaultRenderer = require("awayjs-stagegl/lib/render/DefaultRenderer");
var TriangleMethodMaterial = require("awayjs-stagegl/lib/materials/TriangleMethodMaterial");
var JSPickingCollider = require("awayjs-renderergl/lib/pick/JSPickingCollider");
var AWDParser = require("awayjs-renderergl/lib/parsers/AWDParser");
var AWDSuzanne = (function () {
    function AWDSuzanne() {
        var _this = this;
        this._lookAtPosition = new Vector3D();
        this._cameraIncrement = 0;
        this._mouseOverMaterial = new TriangleMethodMaterial(0xFF0000);
        this.initView();
        this.loadAssets();
        this.initLights();
        window.onresize = function (event) { return _this.onResize(event); };
        this.onResize();
    }
    /**
     *
     */
    AWDSuzanne.prototype.initView = function () {
        this._view = new View(new DefaultRenderer());
        this._view.camera.projection.far = 6000;
        this._view.forceMouseMove = true;
    };
    /**
     *
     */
    AWDSuzanne.prototype.loadAssets = function () {
        var _this = this;
        this._timer = new RequestAnimationFrame(this.render, this);
        this._timer.start();
        AssetLibrary.enableParser(AWDParser);
        this._token = AssetLibrary.load(new URLRequest('assets/suzanne.awd'));
        this._token.addEventListener(LoaderEvent.RESOURCE_COMPLETE, function (event) { return _this.onResourceComplete(event); });
    };
    /**
     *
     */
    AWDSuzanne.prototype.initLights = function () {
        this._light = new DirectionalLight();
        this._light.color = 0x683019;
        this._light.direction = new Vector3D(1, 0, 0);
        this._light.ambient = 0.1;
        this._light.ambientColor = 0x85b2cd;
        this._light.diffuse = 2.8;
        this._light.specular = 1.8;
        this._view.scene.addChild(this._light);
        this._lightPicker = new StaticLightPicker([this._light]);
    };
    /**
     *
     */
    AWDSuzanne.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    /**
     *
     * @param dt
     */
    AWDSuzanne.prototype.render = function (dt) {
        if (this._view.camera) {
            this._view.camera.lookAt(this._lookAtPosition);
            this._cameraIncrement += 0.01;
            this._view.camera.x = Math.cos(this._cameraIncrement) * 1400;
            this._view.camera.z = Math.sin(this._cameraIncrement) * 1400;
            this._light.x = Math.cos(this._cameraIncrement) * 1400;
            this._light.y = Math.sin(this._cameraIncrement) * 1400;
        }
        this._view.render();
    };
    /**
     *
     * @param e
     */
    AWDSuzanne.prototype.onResourceComplete = function (e) {
        var _this = this;
        var loader = e.target;
        var numAssets = loader.baseDependency.assets.length;
        for (var i = 0; i < numAssets; ++i) {
            var asset = loader.baseDependency.assets[i];
            switch (asset.assetType) {
                case AssetType.MESH:
                    var mesh = asset;
                    this._suzane = mesh;
                    this._suzane.material.lightPicker = this._lightPicker;
                    this._suzane.y = -100;
                    this._mouseOutMaterial = this._suzane.material;
                    for (var c = 0; c < 80; c++) {
                        var clone = mesh.clone();
                        var scale = this.getRandom(50, 200);
                        clone.x = this.getRandom(-2000, 2000);
                        clone.y = this.getRandom(-2000, 2000);
                        clone.z = this.getRandom(-2000, 2000);
                        clone.transform.scale = new Vector3D(scale, scale, scale);
                        clone.rotationY = this.getRandom(0, 360);
                        clone.addEventListener(MouseEvent.MOUSE_OVER, function (event) { return _this.onMouseOver(event); });
                        clone.addEventListener(MouseEvent.MOUSE_OUT, function (event) { return _this.onMouseOut(event); });
                        this._view.scene.addChild(clone);
                    }
                    mesh.transform.scale = new Vector3D(500, 500, 500);
                    mesh.pickingCollider = new JSPickingCollider();
                    mesh.addEventListener(MouseEvent.MOUSE_OVER, function (event) { return _this.onMouseOver(event); });
                    mesh.addEventListener(MouseEvent.MOUSE_OUT, function (event) { return _this.onMouseOut(event); });
                    this._view.scene.addChild(mesh);
                    break;
                case AssetType.GEOMETRY:
                    break;
                case AssetType.MATERIAL:
                    break;
            }
        }
    };
    AWDSuzanne.prototype.onMouseOver = function (event) {
        event.object.material = this._mouseOverMaterial;
        console.log("mouseover");
    };
    AWDSuzanne.prototype.onMouseOut = function (event) {
        event.object.material = this._mouseOutMaterial;
        console.log("mouseout");
    };
    /**
     *
     * @param min
     * @param max
     * @returns {number}
     */
    AWDSuzanne.prototype.getRandom = function (min, max) {
        return Math.random() * (max - min) + min;
    };
    return AWDSuzanne;
})();
window.onload = function () {
    new AWDSuzanne();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BV0RTdXphbm5lLnRzIl0sIm5hbWVzIjpbIkFXRFN1emFubmUiLCJBV0RTdXphbm5lLmNvbnN0cnVjdG9yIiwiQVdEU3V6YW5uZS5pbml0VmlldyIsIkFXRFN1emFubmUubG9hZEFzc2V0cyIsIkFXRFN1emFubmUuaW5pdExpZ2h0cyIsIkFXRFN1emFubmUub25SZXNpemUiLCJBV0RTdXphbm5lLnJlbmRlciIsIkFXRFN1emFubmUub25SZXNvdXJjZUNvbXBsZXRlIiwiQVdEU3V6YW5uZS5vbk1vdXNlT3ZlciIsIkFXRFN1emFubmUub25Nb3VzZU91dCIsIkFXRFN1emFubmUuZ2V0UmFuZG9tIl0sIm1hcHBpbmdzIjoiQUFDQSxJQUFPLFdBQVcsV0FBZSxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3ZFLElBQU8sUUFBUSxXQUFnQiwrQkFBK0IsQ0FBQyxDQUFDO0FBQ2hFLElBQU8sWUFBWSxXQUFlLHNDQUFzQyxDQUFDLENBQUM7QUFJMUUsSUFBTyxTQUFTLFdBQWUsbUNBQW1DLENBQUMsQ0FBQztBQUVwRSxJQUFPLFVBQVUsV0FBZSxnQ0FBZ0MsQ0FBQyxDQUFDO0FBQ2xFLElBQU8scUJBQXFCLFdBQVksNkNBQTZDLENBQUMsQ0FBQztBQUV2RixJQUFPLElBQUksV0FBaUIsb0NBQW9DLENBQUMsQ0FBQztBQUVsRSxJQUFPLGdCQUFnQixXQUFjLDhDQUE4QyxDQUFDLENBQUM7QUFFckYsSUFBTyxVQUFVLFdBQWUsc0NBQXNDLENBQUMsQ0FBQztBQUN4RSxJQUFPLGlCQUFpQixXQUFhLDZEQUE2RCxDQUFDLENBQUM7QUFFcEcsSUFBTyxlQUFlLFdBQWMsMkNBQTJDLENBQUMsQ0FBQztBQUNqRixJQUFPLHNCQUFzQixXQUFZLHFEQUFxRCxDQUFDLENBQUM7QUFFaEcsSUFBTyxpQkFBaUIsV0FBYSw4Q0FBOEMsQ0FBQyxDQUFDO0FBQ3JGLElBQU8sU0FBUyxXQUFlLHlDQUF5QyxDQUFDLENBQUM7QUFFMUUsSUFBTSxVQUFVO0lBY2ZBLFNBZEtBLFVBQVVBO1FB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Q2pGQSxJQUFJQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxHQUFHQSxDQUFDQTtvQkFDdEJBLElBQUlBLENBQUNBLGlCQUFpQkEsR0FBNEJBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLFFBQVFBLENBQUNBO29CQUV4RUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBVUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsRUFBRUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7d0JBRXBDQSxJQUFJQSxLQUFLQSxHQUFlQSxJQUFJQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQTt3QkFDckNBLElBQUlBLEtBQUtBLEdBQVVBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLEVBQUVBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO3dCQUMzQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7d0JBQ3RDQSxLQUFLQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTt3QkFDdENBLEtBQUtBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBO3dCQUN0Q0EsS0FBS0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsUUFBUUEsQ0FBQ0EsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsQ0FBQ0EsQ0FBQ0E7d0JBQzFEQSxLQUFLQSxDQUFDQSxTQUFTQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFFQSxDQUFDQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQTt3QkFDMUNBLEtBQUtBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsVUFBVUEsRUFBRUEsVUFBQ0EsS0FBZ0JBLElBQUtBLE9BQUFBLEtBQUlBLENBQUNBLFdBQVdBLENBQUNBLEtBQUtBLENBQUNBLEVBQXZCQSxDQUF1QkEsQ0FBQ0EsQ0FBQ0E7d0JBQzdGQSxLQUFLQSxDQUFDQSxnQkFBZ0JBLENBQUNBLFVBQVVBLENBQUNBLFNBQVNBLEVBQUVBLFVBQUNBLEtBQWdCQSxJQUFLQSxPQUFBQSxLQUFJQSxDQUFDQSxVQUFVQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUF0QkEsQ0FBc0JBLENBQUNBLENBQUNBO3dCQUMzRkEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7b0JBQ2xDQSxDQUFDQTtvQkFFREEsSUFBSUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsUUFBUUEsQ0FBQ0EsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0E7b0JBQ25EQSxJQUFJQSxDQUFDQSxlQUFlQSxHQUFHQSxJQUFJQSxpQkFBaUJBLEVBQUVBLENBQUNBO29CQUUvQ0EsSUFBSUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxVQUFVQSxDQUFDQSxVQUFVQSxFQUFFQSxVQUFDQSxLQUFnQkEsSUFBS0EsT0FBQUEsS0FBSUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsRUFBdkJBLENBQXVCQSxDQUFDQSxDQUFDQTtvQkFDNUZBLElBQUlBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsU0FBU0EsRUFBRUEsVUFBQ0EsS0FBZ0JBLElBQUtBLE9BQUFBLEtBQUlBLENBQUNBLFVBQVVBLENBQUNBLEtBQUtBLENBQUNBLEVBQXRCQSxDQUFzQkEsQ0FBQ0EsQ0FBQ0E7b0JBQzFGQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxLQUFLQSxDQUFDQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtvQkFFaENBLEtBQUtBLENBQUNBO2dCQUVQQSxLQUFLQSxTQUFTQSxDQUFDQSxRQUFRQTtvQkFDdEJBLEtBQUtBLENBQUNBO2dCQUVQQSxLQUFLQSxTQUFTQSxDQUFDQSxRQUFRQTtvQkFDdEJBLEtBQUtBLENBQUNBO1lBQ1JBLENBQUNBO1FBQ0ZBLENBQUNBO0lBQ0ZBLENBQUNBO0lBRU9QLGdDQUFXQSxHQUFuQkEsVUFBb0JBLEtBQWdCQTtRQUUzQlEsS0FBS0EsQ0FBQ0EsTUFBT0EsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0Esa0JBQWtCQSxDQUFDQTtRQUV6REEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0E7SUFDMUJBLENBQUNBO0lBRU9SLCtCQUFVQSxHQUFsQkEsVUFBbUJBLEtBQWdCQTtRQUUxQlMsS0FBS0EsQ0FBQ0EsTUFBT0EsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQTtRQUV4REEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0E7SUFDekJBLENBQUNBO0lBRURUOzs7OztPQUtHQTtJQUNLQSw4QkFBU0EsR0FBakJBLFVBQWtCQSxHQUFVQSxFQUFFQSxHQUFVQTtRQUV2Q1UsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsRUFBRUEsR0FBQ0EsQ0FBQ0EsR0FBR0EsR0FBR0EsR0FBR0EsQ0FBQ0EsR0FBR0EsR0FBR0EsQ0FBQ0E7SUFDeENBLENBQUNBO0lBQ0ZWLGlCQUFDQTtBQUFEQSxDQTlLQSxBQThLQ0EsSUFBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLEdBQUc7SUFFZixJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQ2xCLENBQUMsQ0FBQSIsImZpbGUiOiJBV0RTdXphbm5lLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFzc2V0RXZlbnRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2V2ZW50cy9Bc3NldEV2ZW50XCIpO1xuaW1wb3J0IExvYWRlckV2ZW50XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9ldmVudHMvTG9hZGVyRXZlbnRcIik7XG5pbXBvcnQgVmVjdG9yM0RcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9WZWN0b3IzRFwiKTtcbmltcG9ydCBBc3NldExpYnJhcnlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvQXNzZXRMaWJyYXJ5XCIpO1xuaW1wb3J0IEFzc2V0TG9hZGVyXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0Fzc2V0TG9hZGVyXCIpO1xuaW1wb3J0IEFzc2V0TG9hZGVyQ29udGV4dFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9saWJyYXJ5L0Fzc2V0TG9hZGVyQ29udGV4dFwiKTtcbmltcG9ydCBBc3NldExvYWRlclRva2VuXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvbGlicmFyeS9Bc3NldExvYWRlclRva2VuXCIpO1xuaW1wb3J0IEFzc2V0VHlwZVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvbGlicmFyeS9Bc3NldFR5cGVcIik7XG5pbXBvcnQgSUFzc2V0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2xpYnJhcnkvSUFzc2V0XCIpO1xuaW1wb3J0IFVSTFJlcXVlc3RcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL25ldC9VUkxSZXF1ZXN0XCIpO1xuaW1wb3J0IFJlcXVlc3RBbmltYXRpb25GcmFtZVx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIpO1xuXG5pbXBvcnQgVmlld1x0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2NvbnRhaW5lcnMvVmlld1wiKTtcbmltcG9ydCBIb3ZlckNvbnRyb2xsZXJcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9jb250cm9sbGVycy9Ib3ZlckNvbnRyb2xsZXJcIik7XG5pbXBvcnQgRGlyZWN0aW9uYWxMaWdodFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2VudGl0aWVzL0RpcmVjdGlvbmFsTGlnaHRcIik7XG5pbXBvcnQgTWVzaFx0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2VudGl0aWVzL01lc2hcIik7XG5pbXBvcnQgTW91c2VFdmVudFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZXZlbnRzL01vdXNlRXZlbnRcIik7XG5pbXBvcnQgU3RhdGljTGlnaHRQaWNrZXJcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvbWF0ZXJpYWxzL2xpZ2h0cGlja2Vycy9TdGF0aWNMaWdodFBpY2tlclwiKTtcblxuaW1wb3J0IERlZmF1bHRSZW5kZXJlclx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL3JlbmRlci9EZWZhdWx0UmVuZGVyZXJcIik7XG5pbXBvcnQgVHJpYW5nbGVNZXRob2RNYXRlcmlhbFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvbWF0ZXJpYWxzL1RyaWFuZ2xlTWV0aG9kTWF0ZXJpYWxcIik7XG5cbmltcG9ydCBKU1BpY2tpbmdDb2xsaWRlclx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1yZW5kZXJlcmdsL2xpYi9waWNrL0pTUGlja2luZ0NvbGxpZGVyXCIpO1xuaW1wb3J0IEFXRFBhcnNlclx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtcmVuZGVyZXJnbC9saWIvcGFyc2Vycy9BV0RQYXJzZXJcIik7XG5cbmNsYXNzIEFXRFN1emFubmVcbntcblxuXHRwcml2YXRlIF92aWV3OlZpZXc7XG5cdHByaXZhdGUgX3Rva2VuOkFzc2V0TG9hZGVyVG9rZW47XG5cdHByaXZhdGUgX3RpbWVyOlJlcXVlc3RBbmltYXRpb25GcmFtZTtcblx0cHJpdmF0ZSBfc3V6YW5lOk1lc2g7XG5cdHByaXZhdGUgX2xpZ2h0OkRpcmVjdGlvbmFsTGlnaHQ7XG5cdHByaXZhdGUgX2xpZ2h0UGlja2VyOlN0YXRpY0xpZ2h0UGlja2VyO1xuXHRwcml2YXRlIF9sb29rQXRQb3NpdGlvbjpWZWN0b3IzRCA9IG5ldyBWZWN0b3IzRCAoKTtcblx0cHJpdmF0ZSBfY2FtZXJhSW5jcmVtZW50Om51bWJlciA9IDA7XG5cdHByaXZhdGUgX21vdXNlT3Zlck1hdGVyaWFsOlRyaWFuZ2xlTWV0aG9kTWF0ZXJpYWwgPSBuZXcgVHJpYW5nbGVNZXRob2RNYXRlcmlhbCgweEZGMDAwMCk7XG5cdHByaXZhdGUgX21vdXNlT3V0TWF0ZXJpYWw6VHJpYW5nbGVNZXRob2RNYXRlcmlhbDtcblxuXHRjb25zdHJ1Y3RvcigpXG5cdHtcblx0XHR0aGlzLmluaXRWaWV3KCk7XG5cdFx0dGhpcy5sb2FkQXNzZXRzKCk7XG5cdFx0dGhpcy5pbml0TGlnaHRzKCk7XG5cblx0XHR3aW5kb3cub25yZXNpemUgID0gKGV2ZW50OlVJRXZlbnQpID0+IHRoaXMub25SZXNpemUoZXZlbnQpO1xuXG5cdFx0dGhpcy5vblJlc2l6ZSgpO1xuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqL1xuXHRwcml2YXRlIGluaXRWaWV3KCk6dm9pZFxuXHR7XG5cdFx0dGhpcy5fdmlldyA9IG5ldyBWaWV3KG5ldyBEZWZhdWx0UmVuZGVyZXIoKSk7XG5cdFx0dGhpcy5fdmlldy5jYW1lcmEucHJvamVjdGlvbi5mYXIgPSA2MDAwO1xuXHRcdHRoaXMuX3ZpZXcuZm9yY2VNb3VzZU1vdmUgPSB0cnVlO1xuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqL1xuXHRwcml2YXRlIGxvYWRBc3NldHMoKTp2b2lkXG5cdHtcblx0XHR0aGlzLl90aW1lciA9IG5ldyBSZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5yZW5kZXIsIHRoaXMpO1xuXHRcdHRoaXMuX3RpbWVyLnN0YXJ0KCk7XG5cblx0XHRBc3NldExpYnJhcnkuZW5hYmxlUGFyc2VyKEFXRFBhcnNlcik7XG5cblx0XHR0aGlzLl90b2tlbiA9IEFzc2V0TGlicmFyeS5sb2FkKG5ldyBVUkxSZXF1ZXN0KCdhc3NldHMvc3V6YW5uZS5hd2QnKSk7XG5cdFx0dGhpcy5fdG9rZW4uYWRkRXZlbnRMaXN0ZW5lcihMb2FkZXJFdmVudC5SRVNPVVJDRV9DT01QTEVURSwgKGV2ZW50OkxvYWRlckV2ZW50KSA9PiB0aGlzLm9uUmVzb3VyY2VDb21wbGV0ZShldmVudCkpO1xuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqL1xuXHRwcml2YXRlIGluaXRMaWdodHMoKTp2b2lkXG5cdHtcblx0XHR0aGlzLl9saWdodCA9IG5ldyBEaXJlY3Rpb25hbExpZ2h0KCk7XG5cdFx0dGhpcy5fbGlnaHQuY29sb3IgPSAweDY4MzAxOTtcblx0XHR0aGlzLl9saWdodC5kaXJlY3Rpb24gPSBuZXcgVmVjdG9yM0QoMSwgMCwgMCk7XG5cdFx0dGhpcy5fbGlnaHQuYW1iaWVudCA9IDAuMTtcblx0XHR0aGlzLl9saWdodC5hbWJpZW50Q29sb3IgPSAweDg1YjJjZDtcblx0XHR0aGlzLl9saWdodC5kaWZmdXNlID0gMi44O1xuXHRcdHRoaXMuX2xpZ2h0LnNwZWN1bGFyID0gMS44O1xuXHRcdHRoaXMuX3ZpZXcuc2NlbmUuYWRkQ2hpbGQodGhpcy5fbGlnaHQpO1xuXHRcdHRoaXMuX2xpZ2h0UGlja2VyID0gbmV3IFN0YXRpY0xpZ2h0UGlja2VyKFt0aGlzLl9saWdodF0pO1xuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqL1xuXHRwcml2YXRlIG9uUmVzaXplKGV2ZW50OlVJRXZlbnQgPSBudWxsKTp2b2lkXG5cdHtcblx0XHR0aGlzLl92aWV3LnkgPSAwO1xuXHRcdHRoaXMuX3ZpZXcueCA9IDA7XG5cdFx0dGhpcy5fdmlldy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdHRoaXMuX3ZpZXcuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG5cblx0LyoqXG5cdCAqXG5cdCAqIEBwYXJhbSBkdFxuXHQgKi9cblx0cHJpdmF0ZSByZW5kZXIoZHQ6bnVtYmVyKSAvL2FuaW1hdGUgYmFzZWQgb24gZHQgZm9yIGZpcmVmb3hcblx0e1xuXHRcdGlmICh0aGlzLl92aWV3LmNhbWVyYSkge1xuXHRcdFx0dGhpcy5fdmlldy5jYW1lcmEubG9va0F0KHRoaXMuX2xvb2tBdFBvc2l0aW9uKTtcblx0XHRcdHRoaXMuX2NhbWVyYUluY3JlbWVudCArPSAwLjAxO1xuXHRcdFx0dGhpcy5fdmlldy5jYW1lcmEueCA9IE1hdGguY29zKHRoaXMuX2NhbWVyYUluY3JlbWVudCkqMTQwMDtcblx0XHRcdHRoaXMuX3ZpZXcuY2FtZXJhLnogPSBNYXRoLnNpbih0aGlzLl9jYW1lcmFJbmNyZW1lbnQpKjE0MDA7XG5cblx0XHRcdHRoaXMuX2xpZ2h0LnggPSBNYXRoLmNvcyh0aGlzLl9jYW1lcmFJbmNyZW1lbnQpKjE0MDA7XG5cdFx0XHR0aGlzLl9saWdodC55ID0gTWF0aC5zaW4odGhpcy5fY2FtZXJhSW5jcmVtZW50KSoxNDAwO1xuXG5cdFx0fVxuXG5cdFx0dGhpcy5fdmlldy5yZW5kZXIoKTtcblx0fVxuXG5cdC8qKlxuXHQgKlxuXHQgKiBAcGFyYW0gZVxuXHQgKi9cblx0cHVibGljIG9uUmVzb3VyY2VDb21wbGV0ZShlOkxvYWRlckV2ZW50KVxuXHR7XG5cdFx0dmFyIGxvYWRlcjpBc3NldExvYWRlciA9IDxBc3NldExvYWRlcj4gZS50YXJnZXQ7XG5cdFx0dmFyIG51bUFzc2V0czpudW1iZXIgPSBsb2FkZXIuYmFzZURlcGVuZGVuY3kuYXNzZXRzLmxlbmd0aDtcblxuXHRcdGZvciAodmFyIGk6bnVtYmVyID0gMDsgaSA8IG51bUFzc2V0czsgKytpKSB7XG5cdFx0XHR2YXIgYXNzZXQ6SUFzc2V0ID0gbG9hZGVyLmJhc2VEZXBlbmRlbmN5LmFzc2V0c1sgaSBdO1xuXG5cdFx0XHRzd2l0Y2goYXNzZXQuYXNzZXRUeXBlKSB7XG5cdFx0XHRcdGNhc2UgQXNzZXRUeXBlLk1FU0g6XG5cblx0XHRcdFx0XHR2YXIgbWVzaDpNZXNoID0gPE1lc2g+IGFzc2V0O1xuXG5cdFx0XHRcdFx0dGhpcy5fc3V6YW5lID0gbWVzaDtcblx0XHRcdFx0XHQoPFRyaWFuZ2xlTWV0aG9kTWF0ZXJpYWw+IHRoaXMuX3N1emFuZS5tYXRlcmlhbCkubGlnaHRQaWNrZXIgPSB0aGlzLl9saWdodFBpY2tlcjtcblx0XHRcdFx0XHR0aGlzLl9zdXphbmUueSA9IC0xMDA7XG5cdFx0XHRcdFx0dGhpcy5fbW91c2VPdXRNYXRlcmlhbCA9IDxUcmlhbmdsZU1ldGhvZE1hdGVyaWFsPiB0aGlzLl9zdXphbmUubWF0ZXJpYWw7XG5cblx0XHRcdFx0XHRmb3IgKHZhciBjOm51bWJlciA9IDA7IGMgPCA4MDsgYysrKSB7XG5cblx0XHRcdFx0XHRcdHZhciBjbG9uZTpNZXNoID0gPE1lc2g+IG1lc2guY2xvbmUoKTtcblx0XHRcdFx0XHRcdHZhciBzY2FsZTpudW1iZXIgPSB0aGlzLmdldFJhbmRvbSg1MCwgMjAwKTtcblx0XHRcdFx0XHRcdGNsb25lLnggPSB0aGlzLmdldFJhbmRvbSgtMjAwMCwgMjAwMCk7XG5cdFx0XHRcdFx0XHRjbG9uZS55ID0gdGhpcy5nZXRSYW5kb20oLTIwMDAsIDIwMDApO1xuXHRcdFx0XHRcdFx0Y2xvbmUueiA9IHRoaXMuZ2V0UmFuZG9tKC0yMDAwLCAyMDAwKTtcblx0XHRcdFx0XHRcdGNsb25lLnRyYW5zZm9ybS5zY2FsZSA9IG5ldyBWZWN0b3IzRChzY2FsZSwgc2NhbGUsIHNjYWxlKTtcblx0XHRcdFx0XHRcdGNsb25lLnJvdGF0aW9uWSA9IHRoaXMuZ2V0UmFuZG9tICgwLCAzNjApO1xuXHRcdFx0XHRcdFx0Y2xvbmUuYWRkRXZlbnRMaXN0ZW5lcihNb3VzZUV2ZW50Lk1PVVNFX09WRVIsIChldmVudDpNb3VzZUV2ZW50KSA9PiB0aGlzLm9uTW91c2VPdmVyKGV2ZW50KSk7XG5cdFx0XHRcdFx0XHRjbG9uZS5hZGRFdmVudExpc3RlbmVyKE1vdXNlRXZlbnQuTU9VU0VfT1VULCAoZXZlbnQ6TW91c2VFdmVudCkgPT4gdGhpcy5vbk1vdXNlT3V0KGV2ZW50KSk7XG5cdFx0XHRcdFx0XHR0aGlzLl92aWV3LnNjZW5lLmFkZENoaWxkKGNsb25lKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRtZXNoLnRyYW5zZm9ybS5zY2FsZSA9IG5ldyBWZWN0b3IzRCg1MDAsIDUwMCwgNTAwKTtcblx0XHRcdFx0XHRtZXNoLnBpY2tpbmdDb2xsaWRlciA9IG5ldyBKU1BpY2tpbmdDb2xsaWRlcigpO1xuXG5cdFx0XHRcdFx0bWVzaC5hZGRFdmVudExpc3RlbmVyKE1vdXNlRXZlbnQuTU9VU0VfT1ZFUiwgKGV2ZW50Ok1vdXNlRXZlbnQpID0+IHRoaXMub25Nb3VzZU92ZXIoZXZlbnQpKTtcblx0XHRcdFx0XHRtZXNoLmFkZEV2ZW50TGlzdGVuZXIoTW91c2VFdmVudC5NT1VTRV9PVVQsIChldmVudDpNb3VzZUV2ZW50KSA9PiB0aGlzLm9uTW91c2VPdXQoZXZlbnQpKTtcblx0XHRcdFx0XHR0aGlzLl92aWV3LnNjZW5lLmFkZENoaWxkKG1lc2gpO1xuXG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSBBc3NldFR5cGUuR0VPTUVUUlk6XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSBBc3NldFR5cGUuTUFURVJJQUw6XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBvbk1vdXNlT3ZlcihldmVudDpNb3VzZUV2ZW50KVxuXHR7XG5cdFx0KDxNZXNoPiBldmVudC5vYmplY3QpLm1hdGVyaWFsID0gdGhpcy5fbW91c2VPdmVyTWF0ZXJpYWw7XG5cblx0XHRjb25zb2xlLmxvZyhcIm1vdXNlb3ZlclwiKTtcblx0fVxuXG5cdHByaXZhdGUgb25Nb3VzZU91dChldmVudDpNb3VzZUV2ZW50KVxuXHR7XG5cdFx0KDxNZXNoPiBldmVudC5vYmplY3QpLm1hdGVyaWFsID0gdGhpcy5fbW91c2VPdXRNYXRlcmlhbDtcblxuXHRcdGNvbnNvbGUubG9nKFwibW91c2VvdXRcIik7XG5cdH1cblxuXHQvKipcblx0ICpcblx0ICogQHBhcmFtIG1pblxuXHQgKiBAcGFyYW0gbWF4XG5cdCAqIEByZXR1cm5zIHtudW1iZXJ9XG5cdCAqL1xuXHRwcml2YXRlIGdldFJhbmRvbShtaW46bnVtYmVyLCBtYXg6bnVtYmVyKTpudW1iZXJcblx0e1xuXHRcdHJldHVybiBNYXRoLnJhbmRvbSgpKihtYXggLSBtaW4pICsgbWluO1xuXHR9XG59XG5cbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpXG57XG5cdG5ldyBBV0RTdXphbm5lKCk7XG59XG5cbiJdfQ==