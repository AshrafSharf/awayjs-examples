var BlendMode = require("awayjs-core/lib/base/BlendMode");
var AwayEvent = require("awayjs-core/lib/events/Event");
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var URLLoader = require("awayjs-core/lib/net/URLLoader");
var URLLoaderDataFormat = require("awayjs-core/lib/net/URLLoaderDataFormat");
var URLRequest = require("awayjs-core/lib/net/URLRequest");
var ParserUtils = require("awayjs-core/lib/parsers/ParserUtils");
var PerspectiveProjection = require("awayjs-core/lib/projections/PerspectiveProjection");
var ImageTexture = require("awayjs-core/lib/textures/ImageTexture");
var RequestAnimationFrame = require("awayjs-core/lib/utils/RequestAnimationFrame");
var View = require("awayjs-display/lib/containers/View");
var DirectionalLight = require("awayjs-display/lib/entities/DirectionalLight");
var StaticLightPicker = require("awayjs-display/lib/materials/lightpickers/StaticLightPicker");
var PrimitiveCubePrefab = require("awayjs-display/lib/prefabs/PrimitiveCubePrefab");
var PrimitiveTorusPrefab = require("awayjs-display/lib/prefabs/PrimitiveTorusPrefab");
var DefaultRenderer = require("awayjs-renderergl/lib/DefaultRenderer");
var MethodMaterial = require("awayjs-methodmaterials/lib/MethodMaterial");
var MethodRendererPool = require("awayjs-methodmaterials/lib/pool/MethodRendererPool");
var CubePrimitive = (function () {
    function CubePrimitive() {
        this.initView();
        this.initCamera();
        this.initLights();
        this.initGeometry();
        this.loadResources();
    }
    /**
     *
     */
    CubePrimitive.prototype.initView = function () {
        this._view = new View(new DefaultRenderer(MethodRendererPool));
        this._view.backgroundColor = 0x000000;
        this._view.camera.x = 130;
        this._view.camera.y = 0;
        this._view.camera.z = 0;
    };
    /**
     *
     */
    CubePrimitive.prototype.initGeometry = function () {
        this._cube = new PrimitiveCubePrefab(20.0, 20.0, 20.0);
        this._torus = new PrimitiveTorusPrefab(150, 80, 32, 16, true);
        this._mesh = this._torus.getNewObject();
        this._mesh2 = this._cube.getNewObject();
        this._mesh2.x = 130;
        this._mesh2.z = 40;
    };
    /**
     *
     */
    CubePrimitive.prototype.initLights = function () {
        this._light = new DirectionalLight();
        this._light.color = 0xffffff;
        this._light.direction = new Vector3D(1, 0, 0);
        this._light.ambient = 0.4;
        this._light.ambientColor = 0x85b2cd;
        this._light.diffuse = 2.8;
        this._light.specular = 1.8;
        this._lightPicker = new StaticLightPicker([this._light]);
    };
    /**
     *
     */
    CubePrimitive.prototype.initCamera = function () {
        this._cameraAxis = new Vector3D(0, 0, 1);
        this._view.camera.projection = new PerspectiveProjection(120);
        this._view.camera.projection.near = 0.1;
    };
    /**
     *
     */
    CubePrimitive.prototype.loadResources = function () {
        var _this = this;
        window.onresize = function (event) { return _this.onResize(event); };
        this.onResize();
        this._raf = new RequestAnimationFrame(this.render, this);
        this._raf.start();
        var urlRequest = new URLRequest("assets/spacy_texture.png");
        var imgLoader = new URLLoader();
        imgLoader.dataFormat = URLLoaderDataFormat.BLOB;
        imgLoader.addEventListener(AwayEvent.COMPLETE, function (event) { return _this.urlCompleteHandler(event); });
        imgLoader.load(urlRequest);
    };
    /**
     *
     * @param event
     */
    CubePrimitive.prototype.urlCompleteHandler = function (event) {
        var _this = this;
        var imageLoader = event.target;
        this._image = ParserUtils.blobToImage(imageLoader.data);
        this._image.onload = function (event) { return _this.imageCompleteHandler(event); };
    };
    /**
     *
     * @param e
     */
    CubePrimitive.prototype.imageCompleteHandler = function (event) {
        var ts = new ImageTexture(this._image);
        var matTx = new MethodMaterial(ts, true, true, false);
        matTx.blendMode = BlendMode.ADD;
        matTx.bothSides = true;
        matTx.lightPicker = this._lightPicker;
        this._mesh.material = matTx;
        this._mesh2.material = matTx;
        this._view.scene.addChild(this._mesh);
        this._view.scene.addChild(this._mesh2);
    };
    /**
     *
     * @param dt
     */
    CubePrimitive.prototype.render = function (dt) {
        if (dt === void 0) { dt = null; }
        this._view.camera.rotate(this._cameraAxis, 1);
        this._mesh.rotationY += 1;
        this._mesh2.rotationX += 0.4;
        this._mesh2.rotationY += 0.4;
        this._view.render();
<<<<<<< Updated upstream
        if (this._view.scene.contains(this._mesh)) {
            this._view.scene.removeChild(this._mesh);
            this._view.scene.removeChild(this._mesh2);
        }
=======
        this._mesh.visible = false;
        this._mesh2.visible = false;
>>>>>>> Stashed changes
    };
    /**
     *
     */
    CubePrimitive.prototype.onResize = function (event) {
        if (event === void 0) { event = null; }
        this._view.y = 0;
        this._view.x = 0;
        this._view.width = window.innerWidth;
        this._view.height = window.innerHeight;
    };
    return CubePrimitive;
})();
window.onload = function () {
    new CubePrimitive();
};

<<<<<<< Updated upstream
//# sourceMappingURL=data:application/json;base64,
=======
//# sourceMappingURL=data:application/json;base64,
>>>>>>> Stashed changes
