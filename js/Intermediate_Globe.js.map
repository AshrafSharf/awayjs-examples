{"version":3,"sources":["webpack:///./src/Intermediate_Globe.ts"],"names":[],"mappings":"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","file":"js/Intermediate_Globe.js","sourcesContent":["/*\n\nGlobe example in Away3d\n\nDemonstrates:\n\nHow to create a textured sphere.\nHow to use containers to rotate an object.\nHow to use the PhongBitmapMaterial.\n\nCode by Rob Bateman\nrob@infiniteturtles.co.uk\nhttp://www.infiniteturtles.co.uk\n\nThis code is distributed under the MIT License\n\nCopyright (c) The Away Foundation http://www.theawayfoundation.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport {BitmapImage2D, BitmapImageCube, BitmapImageChannel, BlendMode, Sampler2D, ElementsType, Single2DTexture} from \"awayjs-full/lib/graphics\";\nimport {LoaderEvent, ColorTransform, Vector3D, Point, AssetLibrary, LoaderContext, URLRequest, RequestAnimationFrame} from \"awayjs-full/lib/core\";\nimport {ShaderRegisterElement, ShaderRegisterCache, ShaderRegisterData, ShaderBase} from \"awayjs-full/lib/stage\";\nimport {LightingShader} from \"awayjs-full/lib/renderer\";\nimport {OrientationMode, AlignmentMode, HoverController, PointLight, Sprite, Scene, Camera, DisplayObjectContainer, Skybox, Billboard, StaticLightPicker, PrimitiveSpherePrefab} from \"awayjs-full/lib/scene\";\nimport {MethodMaterial, SpecularPhongMethod, DiffuseBasicMethod, SpecularBasicMethod, SpecularFresnelMethod, DiffuseCompositeMethod, SpecularCompositeMethod, LightingCompositeChunk, ILightingChunk} from \"awayjs-full/lib/materials\";\nimport {View} from \"awayjs-full/lib/view\";\n\nclass Intermediate_Globe\n{\n\t//engine variables\n\tprivate scene:Scene;\n\tprivate camera:Camera;\n\tprivate view:View;\n\tprivate cameraController:HoverController;\n\n\t//material objects\n\tprivate sunMaterial:MethodMaterial;\n\tprivate groundMaterial:MethodMaterial;\n\tprivate cloudMaterial:MethodMaterial;\n\tprivate atmosphereMaterial:MethodMaterial;\n\tprivate atmosphereDiffuseMethod:SpecularGlobeMethod;\n\tprivate atmosphereSpecularMethod:SpecularGlobeMethod;\n\n\t//scene objects\n\tprivate sun:Billboard;\n\tprivate earth:Sprite;\n\tprivate clouds:Sprite;\n\tprivate atmosphere:Sprite;\n\tprivate tiltContainer:DisplayObjectContainer;\n\tprivate orbitContainer:DisplayObjectContainer;\n\tprivate skyBox:Skybox;\n\n\t//light objects\n\tprivate light:PointLight;\n\tprivate lightPicker:StaticLightPicker;\n\tprivate flares:FlareObject[] = new Array<FlareObject>(12);\n\n\t//navigation variables\n\tprivate _timer:RequestAnimationFrame;\n\tprivate _time:number = 0;\n\tprivate move:boolean = false;\n\tprivate lastPanAngle:number;\n\tprivate lastTiltAngle:number;\n\tprivate lastMouseX:number;\n\tprivate lastMouseY:number;\n\tprivate mouseLockX:number = 0;\n\tprivate mouseLockY:number = 0;\n\tprivate mouseLocked:boolean;\n\tprivate flareVisible:boolean;\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Global initialise function\n\t */\n\tprivate init():void\n\t{\n\t\tthis.initEngine();\n\t\tthis.initLights();\n\t\t//initLensFlare();\n\t\tthis.initMaterials();\n\t\tthis.initObjects();\n\t\tthis.initListeners();\n\t}\n\n\t/**\n\t * Initialise the engine\n\t */\n\tprivate initEngine():void\n\t{\n\t\tthis.scene = new Scene();\n\n\t\t//setup camera for optimal skybox rendering\n\t\tthis.camera = new Camera();\n\t\tthis.camera.projection.far = 100000;\n\n\t\tthis.view = new View();\n\t\tthis.view.scene = this.scene;\n\t\tthis.view.camera = this.camera;\n\n\t\t//setup controller to be used on the camera\n\t\tthis.cameraController = new HoverController(this.camera, null, 0, 0, 600, -90, 90);\n\t\tthis.cameraController.autoUpdate = false;\n\t\tthis.cameraController.yFactor = 1;\n\t}\n\n\t/**\n\t * Initialise the lights\n\t */\n\tprivate initLights():void\n\t{\n\t\tthis.light = new PointLight();\n\t\tthis.light.x = 10000;\n\t\tthis.light.ambient = 1;\n\t\tthis.light.diffuse = 2;\n\n\t\tthis.lightPicker = new StaticLightPicker([this.light]);\n\t}\n/*\n\tprivate initLensFlare():void\n\t{\n\t\tflares.push(new FlareObject(new Flare10(),  3.2, -0.01, 147.9));\n\t\tflares.push(new FlareObject(new Flare11(),  6,    0,     30.6));\n\t\tflares.push(new FlareObject(new Flare7(),   2,    0,     25.5));\n\t\tflares.push(new FlareObject(new Flare7(),   4,    0,     17.85));\n\t\tflares.push(new FlareObject(new Flare12(),  0.4,  0.32,  22.95));\n\t\tflares.push(new FlareObject(new Flare6(),   1,    0.68,  20.4));\n\t\tflares.push(new FlareObject(new Flare2(),   1.25, 1.1,   48.45));\n\t\tflares.push(new FlareObject(new Flare3(),   1.75, 1.37,   7.65));\n\t\tflares.push(new FlareObject(new Flare4(),   2.75, 1.85,  12.75));\n\t\tflares.push(new FlareObject(new Flare8(),   0.5,  2.21,  33.15));\n\t\tflares.push(new FlareObject(new Flare6(),   4,    2.5,   10.4));\n\t\tflares.push(new FlareObject(new Flare7(),   10,   2.66,  50));\n\t}\n*/\n\t/**\n\t * Initialise the materials\n\t */\n\tprivate initMaterials():void\n\t{\n\t\t//adjust specular map\n\t\t//var specBitmap:BitmapImage2D = Cast.bitmapData(EarthSpecular);\n\t\t//specBitmap.colorTransform(specBitmap.rect, new ColorTransform(1, 1, 1, 1, 64, 64, 64));\n\n\t\tvar specular:SpecularFresnelMethod = new SpecularFresnelMethod(true, 1, 0.1, new SpecularPhongMethod());\n\t\tspecular.gloss = 5;\n\t\tspecular.strength = 1;\n\n\t\tthis.sunMaterial = new MethodMaterial();\n\t\tthis.sunMaterial.style.sampler = new Sampler2D(false, true, true);\n\t\tthis.sunMaterial.blendMode = BlendMode.ADD;\n\n\t\tthis.groundMaterial = new MethodMaterial();\n\t\tthis.groundMaterial.style.sampler = new Sampler2D(false, true, true);\n\t\tthis.groundMaterial.specularMethod = specular;\n\t\tthis.groundMaterial.lightPicker = this.lightPicker;\n\t\tthis.groundMaterial.ambientMethod.strength = 1;\n\t\tthis.groundMaterial.diffuseMethod.multiply = false;\n\n\t\tthis.cloudMaterial = new MethodMaterial();\n\t\tthis.cloudMaterial.style.sampler = new Sampler2D(false, true, true);\n\t\tthis.cloudMaterial.alphaBlending = true;\n\t\tthis.cloudMaterial.lightPicker = this.lightPicker;\n\t\tthis.cloudMaterial.style.color = 0x1b2048;\n\t\tthis.cloudMaterial.specularMethod.strength = 0;\n\t\tthis.cloudMaterial.ambientMethod.strength = 1;\n\t\tthis.cloudMaterial.diffuseMethod.multiply = false;\n\n\t\tthis.atmosphereMaterial = new MethodMaterial();\n\t\tthis.atmosphereMaterial.diffuseMethod = new DiffuseGlobeMethod();\n\t\tthis.atmosphereMaterial.specularMethod = new SpecularGlobeMethod(new SpecularPhongMethod());\n\t\tthis.atmosphereMaterial.blendMode = BlendMode.ADD;\n\t\tthis.atmosphereMaterial.lightPicker = this.lightPicker;\n\t\tthis.atmosphereMaterial.specularMethod.strength = 0.5;\n\t\tthis.atmosphereMaterial.specularMethod.gloss = 5;\n\t\tthis.atmosphereMaterial.style.color = 0;\n\t\tthis.atmosphereMaterial.diffuseMethod.color = 0x1671cc;\n\t\tthis.atmosphereMaterial.ambientMethod.strength = 1;\n\t\tthis.atmosphereMaterial.diffuseMethod.multiply = false;\n\t}\n\n\t/**\n\t * Initialise the scene objects\n\t */\n\tprivate initObjects():void\n\t{\n\t\tthis.orbitContainer = new DisplayObjectContainer();\n\t\tthis.orbitContainer.addChild(this.light);\n\t\tthis.scene.addChild(this.orbitContainer);\n\n\t\tthis.sun = new Billboard(this.sunMaterial);\n\t\tthis.sun.width = 3000;\n\t\tthis.sun.height = 3000;\n\t\tthis.sun.registrationPoint = new Vector3D(1500,1500,0);\n\t\tthis.sun.orientationMode = OrientationMode.CAMERA_PLANE;\n\t\tthis.sun.x = 10000;\n\t\tthis.orbitContainer.addChild(this.sun);\n\n\t\tthis.earth = <Sprite> new PrimitiveSpherePrefab(this.groundMaterial, ElementsType.TRIANGLE, 200, 200, 100).getNewObject();\n\n\t\tthis.clouds = <Sprite> new PrimitiveSpherePrefab(this.cloudMaterial, ElementsType.TRIANGLE, 202, 200, 100).getNewObject();\n\n\t\tthis.atmosphere = <Sprite> new PrimitiveSpherePrefab(this.atmosphereMaterial, ElementsType.TRIANGLE, 210, 200, 100).getNewObject();\n\t\tthis.atmosphere.scaleX = -1;\n\n\t\tthis.tiltContainer = new DisplayObjectContainer();\n\t\tthis.tiltContainer.rotationX = 23;\n\t\tthis.tiltContainer.addChild(this.earth);\n\t\tthis.tiltContainer.addChild(this.clouds);\n\t\tthis.tiltContainer.addChild(this.atmosphere);\n\n\t\tthis.scene.addChild(this.tiltContainer);\n\n\t\tthis.cameraController.lookAtObject = this.tiltContainer;\n\t}\n\n\t/**\n\t * Initialise the listeners\n\t */\n\tprivate initListeners():void\n\t{\n\t\twindow.onresize  = (event:UIEvent) => this.onResize(event);\n\n\t\tdocument.onmousedown = (event:MouseEvent) => this.onMouseDown(event);\n\t\tdocument.onmouseup = (event:MouseEvent) => this.onMouseUp(event);\n\t\tdocument.onmousemove = (event:MouseEvent) => this.onMouseMove(event);\n\t\tdocument.onmousewheel= (event:WheelEvent) => this.onMouseWheel(event);\n\n\n\t\tthis.onResize();\n\n\t\tthis._timer = new RequestAnimationFrame(this.onEnterFrame, this);\n\t\tthis._timer.start();\n\n\t\tAssetLibrary.addEventListener(LoaderEvent.LOAD_COMPLETE, (event:LoaderEvent) => this.onResourceComplete(event));\n\n\t\t//setup the url map for textures in the cubemap file\n\t\tvar loaderContext:LoaderContext = new LoaderContext();\n\t\tloaderContext.dependencyBaseUrl = \"assets/skybox/\";\n\n\t\t//environment texture\n\t\tAssetLibrary.load(new URLRequest(\"assets/skybox/space_texture.cube\"), loaderContext);\n\n\t\t//globe textures\n\t\tAssetLibrary.load(new URLRequest(\"assets/globe/cloud_combined_2048.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/globe/earth_specular_2048.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/globe/EarthNormal.png\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/globe/land_lights_16384.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/globe/land_ocean_ice_2048_match.jpg\"));\n\n\t\t//flare textures\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare2.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare3.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare4.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare6.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare7.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare8.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare10.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare11.jpg\"));\n\t\tAssetLibrary.load(new URLRequest(\"assets/lensflare/flare12.jpg\"));\n\t}\n\n\t/**\n\t * Navigation and render loop\n\t */\n\tprivate onEnterFrame(dt:number):void\n\t{\n\t\tthis._time += dt;\n\n\t\tthis.earth.rotationY -= 0.2;\n\t\tthis.clouds.rotationY -= 0.21;\n\t\tthis.orbitContainer.rotationY -= 0.02;\n\n\t\tthis.cameraController.update();\n\n\t\tthis.updateFlares();\n\n\t\tthis.view.render();\n\t}\n\n\tprivate updateFlares():void\n\t{\n\t\tvar flareVisibleOld:boolean = this.flareVisible;\n\n\t\tvar sunScreenPosition:Vector3D = this.view.project(this.sun.scenePosition);\n\t\tvar xOffset:number = sunScreenPosition.x - window.innerWidth/2;\n\t\tvar yOffset:number = sunScreenPosition.y - window.innerHeight/2;\n\n\t\tvar earthScreenPosition:Vector3D = this.view.project(this.earth.scenePosition);\n\t\tvar earthRadius:number = 190 * window.innerHeight/earthScreenPosition.z;\n\t\tvar flareObject:FlareObject;\n\n\t\tthis.flareVisible = (sunScreenPosition.x > 0 && sunScreenPosition.x < window.innerWidth && sunScreenPosition.y > 0 && sunScreenPosition.y  < window.innerHeight && sunScreenPosition.z > 0 && Math.sqrt(xOffset*xOffset + yOffset*yOffset) > earthRadius);\n\n\t\t//update flare visibility\n\t\tif (this.flareVisible != flareVisibleOld) {\n\t\t\tfor (var i:number = 0; i < this.flares.length; i++) {\n\t\t\t\tflareObject = this.flares[i];\n\t\t\t\tif (flareObject)\n\t\t\t\t\tflareObject.billboard.visible = this.flareVisible;\n\t\t\t}\n\t\t}\n\n\t\t//update flare position\n\t\tif (this.flareVisible) {\n\t\t\tvar flareDirection:Point = new Point(xOffset, yOffset);\n\t\t\tfor (var i:number = 0; i < this.flares.length; i++) {\n\t\t\t\tflareObject = this.flares[i];\n\t\t\t\tif (flareObject) {\n\t\t\t\t\tvar position:Vector3D = this.view.unproject(sunScreenPosition.x - flareDirection.x*flareObject.position, sunScreenPosition.y - flareDirection.y*flareObject.position, 100 - i);\n\t\t\t\t\tflareObject.billboard.transform.moveTo(position.x, position.y, position.z);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Listener function for resource complete event on asset library\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tswitch(event.url) {\n\t\t\t//environment texture\n\t\t\tcase 'assets/skybox/space_texture.cube':\n\t\t\t\tthis.skyBox = new Skybox(<BitmapImageCube> event.assets[0]);\n\t\t\t\tthis.skyBox.style.sampler = new Sampler2D(false, true);\n\t\t\t\tthis.scene.addChild(this.skyBox);\n\t\t\t\tbreak;\n\n\t\t\t//globe textures\n\t\t\tcase \"assets/globe/cloud_combined_2048.jpg\" :\n\t\t\t\tvar cloudBitmapImage2D:BitmapImage2D = new BitmapImage2D(2048, 1024, true, 0xFFFFFFFF);\n\t\t\t\tcloudBitmapImage2D.copyChannel(<BitmapImage2D> event.assets[0], cloudBitmapImage2D.rect, new Point(), BitmapImageChannel.RED, BitmapImageChannel.ALPHA);\n\n\t\t\t\tthis.cloudMaterial.ambientMethod.texture = new Single2DTexture(cloudBitmapImage2D);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/globe/earth_specular_2048.jpg\" :\n\t\t\t\tvar specBitmapImage2D:BitmapImage2D = <BitmapImage2D> event.assets[0];\n\t\t\t\tspecBitmapImage2D.colorTransform(specBitmapImage2D.rect, new ColorTransform(1, 1, 1, 1, 64, 64, 64));\n\t\t\t\tthis.groundMaterial.specularMethod.texture = new Single2DTexture(specBitmapImage2D);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/globe/EarthNormal.png\" :\n\t\t\t\tthis.groundMaterial.normalMethod.texture = new Single2DTexture(<BitmapImage2D> event.assets[0]);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/globe/land_lights_16384.jpg\" :\n\t\t\t\tthis.groundMaterial.ambientMethod.texture = new Single2DTexture(<BitmapImage2D> event.assets[0]);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/globe/land_ocean_ice_2048_match.jpg\" :\n\t\t\t\tthis.groundMaterial.diffuseMethod.texture = new Single2DTexture(<BitmapImage2D> event.assets[0]);\n\t\t\t\tbreak;\n\n\t\t\t//flare textures\n\t\t\tcase \"assets/lensflare/flare2.jpg\" :\n\t\t\t\tthis.flares[6] = new FlareObject(<BitmapImage2D> event.assets[0], 1.25, 1.1, 48.45, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare3.jpg\" :\n\t\t\t\tthis.flares[7] = new FlareObject(<BitmapImage2D> event.assets[0], 1.75, 1.37, 7.65, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare4.jpg\" :\n\t\t\t\tthis.flares[8] = new FlareObject(<BitmapImage2D> event.assets[0], 2.75, 1.85, 12.75, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare6.jpg\" :\n\t\t\t\tthis.flares[5] = new FlareObject(<BitmapImage2D> event.assets[0], 1, 0.68, 20.4, this.scene);\n\t\t\t\tthis.flares[10] = new FlareObject(<BitmapImage2D> event.assets[0], 4, 2.5, 10.4, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare7.jpg\" :\n\t\t\t\tthis.flares[2] = new FlareObject(<BitmapImage2D> event.assets[0], 2, 0, 25.5, this.scene);\n\t\t\t\tthis.flares[3] = new FlareObject(<BitmapImage2D> event.assets[0], 4, 0, 17.85, this.scene);\n\t\t\t\tthis.flares[11] = new FlareObject(<BitmapImage2D> event.assets[0], 10, 2.66, 50, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare8.jpg\" :\n\t\t\t\tthis.flares[9] = new FlareObject(<BitmapImage2D> event.assets[0], 0.5, 2.21, 33.15, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare10.jpg\" :\n\t\t\t\tthis.sunMaterial.ambientMethod.texture = new Single2DTexture(<BitmapImage2D> event.assets[0]);\n\t\t\t\tthis.flares[0] = new FlareObject(<BitmapImage2D> event.assets[0], 3.2, -0.01, 100, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare11.jpg\" :\n\t\t\t\tthis.flares[1] = new FlareObject(<BitmapImage2D> event.assets[0], 6, 0, 30.6, this.scene);\n\t\t\t\tbreak;\n\t\t\tcase \"assets/lensflare/flare12.jpg\" :\n\t\t\t\tthis.flares[4] = new FlareObject(<BitmapImage2D> event.assets[0], 0.4, 0.32, 22.95, this.scene);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Mouse down listener for navigation\n\t */\n\tprivate onMouseDown(event:MouseEvent):void\n\t{\n\t\tthis.lastPanAngle = this.cameraController.panAngle;\n\t\tthis.lastTiltAngle = this.cameraController.tiltAngle;\n\t\tthis.lastMouseX = event.clientX;\n\t\tthis.lastMouseY = event.clientY;\n\t\tthis.move = true;\n\t}\n\n\t/**\n\t * Mouse up listener for navigation\n\t */\n\tprivate onMouseUp(event:MouseEvent):void\n\t{\n\t\tthis.move = false;\n\t}\n\n\t/**\n\t * Mouse move listener for mouseLock\n\t */\n\tprivate onMouseMove(event:MouseEvent):void\n\t{\n//            if (stage.displayState == StageDisplayState.FULL_SCREEN) {\n//\n//                if (mouseLocked && (lastMouseX != 0 || lastMouseY != 0)) {\n//                    e.movementX += lastMouseX;\n//                    e.movementY += lastMouseY;\n//                    lastMouseX = 0;\n//                    lastMouseY = 0;\n//                }\n//\n//                mouseLockX += e.movementX;\n//                mouseLockY += e.movementY;\n//\n//                if (!stage.mouseLock) {\n//                    stage.mouseLock = true;\n//                    lastMouseX = stage.mouseX - stage.stageWidth/2;\n//                    lastMouseY = stage.mouseY - stage.stageHeight/2;\n//                } else if (!mouseLocked) {\n//                    mouseLocked = true;\n//                }\n//\n//                //ensure bounds for tiltAngle are not eceeded\n//                if (mouseLockY > cameraController.maxTiltAngle/0.3)\n//                    mouseLockY = cameraController.maxTiltAngle/0.3;\n//                else if (mouseLockY < cameraController.minTiltAngle/0.3)\n//                    mouseLockY = cameraController.minTiltAngle/0.3;\n//            }\n\n//            if (stage.mouseLock) {\n//                cameraController.panAngle = 0.3*mouseLockX;\n//                cameraController.tiltAngle = 0.3*mouseLockY;\n//            } else if (move) {\n//                cameraController.panAngle = 0.3*(stage.mouseX - lastMouseX) + lastPanAngle;\n//                cameraController.tiltAngle = 0.3*(stage.mouseY - lastMouseY) + lastTiltAngle;\n//            }\n\n\t\tif (this.move) {\n\t\t\tthis.cameraController.panAngle = 0.3*(event.clientX - this.lastMouseX) + this.lastPanAngle;\n\t\t\tthis.cameraController.tiltAngle = 0.3*(event.clientY - this.lastMouseY) + this.lastTiltAngle;\n\t\t}\n\t}\n\n\t/**\n\t * Mouse wheel listener for navigation\n\t */\n\tprivate onMouseWheel(event:WheelEvent)\n\t{\n\t\tthis.cameraController.distance -= event.wheelDelta;\n\n\t\tif (this.cameraController.distance < 400)\n\t\t\tthis.cameraController.distance = 400;\n\t\telse if (this.cameraController.distance > 10000)\n\t\t\tthis.cameraController.distance = 10000;\n\t}\n\n\t/**\n\t * Key down listener for fullscreen\n\t */\n//        private onKeyDown(event:KeyboardEvent):void\n//        {\n//            switch (event.keyCode)\n//            {\n//                case Keyboard.SPACE:\n//                    if (stage.displayState == StageDisplayState.FULL_SCREEN) {\n//                        stage.displayState = StageDisplayState.NORMAL;\n//                    } else {\n//                        stage.displayState = StageDisplayState.FULL_SCREEN;\n//\n//                        mouseLocked = false;\n//                        mouseLockX = cameraController.panAngle/0.3;\n//                        mouseLockY = cameraController.tiltAngle/0.3;\n//                    }\n//                    break;\n//            }\n//        }\n//\n\n\t/**\n\t * window listener for resize events\n\t */\n\tprivate onResize(event:UIEvent = null):void\n\t{\n\t\tthis.view.y         = 0;\n\t\tthis.view.x         = 0;\n\t\tthis.view.width     = window.innerWidth;\n\t\tthis.view.height    = window.innerHeight;\n\t}\n}\n\nclass FlareObject\n{\n\tprivate flareSize:number = 14.4;\n\n\tpublic billboard:Billboard;\n\n\tpublic size:number;\n\n\tpublic position:number;\n\n\tpublic opacity:number;\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor(bitmapData:BitmapImage2D, size:number, position:number, opacity:number, scene:Scene)\n\t{\n\t\tvar bd:BitmapImage2D = new BitmapImage2D(bitmapData.width, bitmapData.height, true, 0xFFFFFFFF);\n\t\tbd.copyChannel(bitmapData, bitmapData.rect, new Point(), BitmapImageChannel.RED, BitmapImageChannel.ALPHA);\n\n\t\tvar billboardMaterial:MethodMaterial = new MethodMaterial(bd);\n\t\tbillboardMaterial.style.sampler = new Sampler2D(false, true);\n\t\tbillboardMaterial.alpha = opacity/100;\n\t\tbillboardMaterial.alphaBlending = true;\n\t\t//billboardMaterial.blendMode = BlendMode.LAYER;\n\n\t\tthis.billboard = new Billboard(billboardMaterial);\n\t\tthis.billboard.width = size*this.flareSize;\n\t\tthis.billboard.height = size*this.flareSize;\n\t\tthis.billboard.registrationPoint = new Vector3D(size*this.flareSize/2, size*this.flareSize/2, 0);\n\t\tthis.billboard.orientationMode = OrientationMode.CAMERA_PLANE;\n\t\tthis.billboard.visible = false;\n\t\tthis.size = size;\n\t\tthis.position = position;\n\t\tthis.opacity = opacity;\n\n\t\tscene.addChild(this.billboard)\n\t}\n}\n\nclass DiffuseGlobeMethod extends DiffuseCompositeMethod\n{\n\tpublic static assetType:string = \"[asset DiffuseGlobeMethod]\";\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DiffuseGlobeMethod.assetType;\n\t}\n}\n\nclass DiffuseGlobeChunk extends LightingCompositeChunk\n{\n\t/**\n\t * Creates a new DiffuseCelChunk object.\n\t * @param levels The amount of shadow gradations.\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\n\t */\n\tconstructor(method: DiffuseGlobeMethod, shader: LightingShader)\n\t{\n\t\tsuper(method, shader);\n\n\t\t(<ILightingChunk> this._baseChunk)._modulateFunction = (targetReg: ShaderRegisterElement, registerCache: ShaderRegisterCache, sharedRegisters: ShaderRegisterData) => this.modulateDiffuseMethod(targetReg, registerCache, sharedRegisters);\n\t}\n\n\tprivate modulateDiffuseMethod(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar viewDirFragmentReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalFragmentReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\tvar code:string = \"dp3 \" + targetReg + \".w, \" + viewDirFragmentReg + \".xyz, \" + normalFragmentReg + \".xyz\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n}\n\n\nclass SpecularGlobeMethod extends SpecularCompositeMethod\n{\n\tpublic static assetType:string = \"[asset SpecularGlobeMethod]\";\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SpecularGlobeMethod.assetType;\n\t}\n}\n\nclass SpecularGlobeChunk extends LightingCompositeChunk\n{\n\t/**\n\t * Creates a new DiffuseCelChunk object.\n\t * @param levels The amount of shadow gradations.\n\t * @param baseMethod An optional diffuse method on which the cartoon shading is based. If omitted, DiffuseBasicMethod is used.\n\t */\n\tconstructor(method: SpecularGlobeMethod, shader: LightingShader)\n\t{\n\t\tsuper(method, shader);\n\n\t\t(<ILightingChunk> this._baseChunk)._modulateFunction = (targetReg: ShaderRegisterElement, registerCache: ShaderRegisterCache, sharedRegisters: ShaderRegisterData) => this.modulateSpecularMethod(targetReg, registerCache, sharedRegisters);\n\t}\n\n\n\tprivate modulateSpecularMethod(targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar viewDirFragmentReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalFragmentReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeFragmentSingleTemp();\n\t\tregCache.addFragmentTempUsages(temp, 1);\n\n\t\tvar code:string = \"dp3 \" + temp + \", \" + viewDirFragmentReg + \".xyz, \" + normalFragmentReg + \".xyz\\n\" +\n\t\t\t\"neg \" + temp + \", \" + temp + \"\\n\" +\n\t\t\t\"mul \" + targetReg + \".w, \" + targetReg + \".w, \" + temp + \"\\n\";\n\n\t\tregCache.removeFragmentTempUsage(temp);\n\n\t\treturn code;\n\t}\n}\n\nShaderBase.registerAbstraction(DiffuseGlobeChunk, DiffuseGlobeMethod);\nShaderBase.registerAbstraction(SpecularGlobeChunk, SpecularGlobeMethod);\n\nwindow.onload = function ()\n{\n\tnew Intermediate_Globe();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Intermediate_Globe.ts"],"sourceRoot":""}