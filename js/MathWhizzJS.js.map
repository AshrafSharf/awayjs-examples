{"version":3,"sources":["webpack:///./src/MathWhizzJS.ts"],"names":[],"mappings":"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","file":"js/MathWhizzJS.js","sourcesContent":["\n\nimport {AssetEvent, AssetLibrary, LoaderEvent, ParserEvent, URLRequest, RequestAnimationFrame, CoordinateSystem, PerspectiveProjection} from \"awayjs-full/lib/core\";\nimport {Graphics, Shape} from \"awayjs-full/lib/graphics\";\nimport {HoverController, TextField, Sprite, Billboard, Camera, LoaderContainer, MovieClip} from \"awayjs-full/lib/scene\";\nimport {MethodMaterial}\tfrom \"awayjs-full/lib/materials\";\nimport {AWDParser} from \"awayjs-full/lib/parsers\";\nimport {DefaultRenderer} from  \"awayjs-full/lib/renderer\";\nimport {View, SceneGraphPartition} from \"awayjs-full/lib/view\";\n\nclass MathWhizzJS\n{\n\tprivate _fps:number = 20;\n\tprivate _view: View;\n\tprivate _renderer: DefaultRenderer;\n\tprivate _rootTimeLine: MovieClip;\n\tprivate _timer: RequestAnimationFrame;\n\tprivate _time: number = 0;\n\tprivate _projection: PerspectiveProjection;\n\tprivate _hoverControl: HoverController;\n\tprivate _stage_width: number;\n\tprivate _stage_height: number;\n\tprivate _material:MethodMaterial;\n\tprivate _shapes:Array<Shape> = new Array<Shape>();\n\n\tprivate counter: number;\n\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\t{\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Global initialise function\n\t */\n\tprivate init(): void\n\t{\n\n\t\tAssetLibrary.enableParser(AWDParser);\n\t\tthis.initEngine();\n\t\tthis.initObjects();\n\t\tthis.initListeners();\n\n\n\t}\n\n\n\t/**\n\t * Initialise the engine\n\t */\n\tprivate initEngine(): void\n\t{\n\t\t//create the view\n\t\tthis._renderer = new DefaultRenderer();\n\t\tthis._renderer.renderableSorter = null;//new RenderableSort2D();\n\t\tthis._view = new View(this._renderer);\n\t\tthis._view.backgroundColor = 0x000000;\n\t\tthis._stage_width = 550;\n\t\tthis._stage_height = 400;\n\n\t\tthis._projection = new PerspectiveProjection();\n\t\tthis._projection.coordinateSystem = CoordinateSystem.RIGHT_HANDED;\n\t\tthis._projection.fieldOfView = 30;\n\t\tthis._projection.originX = 0;\n\t\tthis._projection.originY = 0;\n\t\tvar camera:Camera = new Camera();\n\t\tcamera.projection = this._projection;\n\n\t\tthis._hoverControl = new HoverController(camera, null, 180, 0, 1000);\n\t\tthis._view.camera = camera;\n\t}\n\n\t/**\n\t * Initialise the scene objects\n\t */\n\tprivate initObjects(): void\n\t{\n\t\t//kickoff asset loading\n\t\tLoaderContainer.enableParser(AWDParser);\n\t\tvar loader:LoaderContainer = new LoaderContainer();\n\t\tloader.addEventListener(AssetEvent.ASSET_COMPLETE, (event: AssetEvent) => this.onAssetComplete(event));\n\t\tloader.addEventListener(LoaderEvent.LOAD_COMPLETE, (event: LoaderEvent) => this.onRessourceComplete(event));\n\t\tloader.addEventListener(ParserEvent.PARSE_ERROR, (event: ParserEvent) => this.onParseError(event));\n\t\t//loader.addEventListener(IOErrorEvent.IO_ERROR, (event: ParserEvent) => this.onParseError(event));\n\n\t\tloader.load(new URLRequest(\"assets/AWD3/shell.awd\"), null, null, new AWDParser(this._view));\n\n\t\tthis._material = new MethodMaterial(0x000001);\n\t\tthis._material.style.color = 0x000001;\n\t}\n\n\t/**\n\t * Initialise the listeners\n\t */\n\tprivate initListeners(): void\n\t{\n\t\twindow.onresize  = (event) => this.onResize(event);\n\t\tthis.onResize();\n\n\t\tthis._timer = new RequestAnimationFrame(this.onEnterFrame, this);\n\t\tthis._timer.start();\n\t}\n\n\t/**\n\t * loader listener for asset complete events\n\t */\n\tprivate onAssetComplete(event: AssetEvent): void\n\t{\n\t\tconsole.log(\"graphic: \" + event.asset.assetType)\n\t\tif(event.asset.isAsset(Graphics)){\n\t\t\t/*var one_graphics:Graphics = <Graphics> event.asset;\n\t\t\tfor (var i:number = 0; i < one_graphics.count; i++) {\n\t\t\t\tthis._shapes.push(one_graphics.getShapeAt(i));\n\t\t\t}*/\n\t\t}else if(event.asset.isAsset(TextField)){\n\t\t\tvar one_textfield:TextField=<TextField> event.asset;\n\t\t\t//this.loaded_display_objects.push(one_textfield);\n\t\t\t//console.log(\"orginal textfield_text = \"+one_textfield.text);\n\t\t\t//one_textfield.text=\"new text\";\n\t\t}\n\t\telse if(event.asset.isAsset(Sprite)) {\n\t\t\tvar one_sprite:Sprite = <Sprite> event.asset;\n\t\t\t//one_sprite.debugVisible = true;\n\t\t\t//one_sprite.material = new BasicMaterial(0xFF0000);\n\t\t\t//one_sprite.material.alphaBlending = false;\n\t\t\t//this._view.scene.addChild(one_sprite);\n\t\t\t//this.loaded_display_objects.push(one_sprite);\n\t\t}\n\t\telse if(event.asset.isAsset(Billboard)) {\n\t\t\tvar one_billboard:Billboard = <Billboard> event.asset;\n\t\t\t//this.loaded_display_objects.push(one_billboard);\n\t\t}\n\t\telse if(event.asset.isAsset(MovieClip)) {\n\t\t\tvar movieClip:MovieClip=<MovieClip> event.asset;\n\t\t\t/*if (movieClip.name == \"border\" || movieClip.name == \"dream\"\n\t\t\t\t|| movieClip.name == \"IAP Menu\"\n\t\t\t\t|| movieClip.name == \"language flag\"\n\t\t\t\t|| movieClip.name == \"shoptag_shapes\"\n\t\t\t\t|| movieClip.name == \"shoptag_cliffedges\"\n\t\t\t\t|| movieClip.name ==  \"languages baked\"\n\t\t\t\t|| movieClip.name == \"Character\"\n\t\t\t\t|| movieClip.name == \"free\") {\n\t\t\t\tmovieClip.mouseEnabled = false;\n\t\t\t\tmovieClip.mouseChildren = false;\n\t\t\t}*/\n\t\t\tthis._rootTimeLine = movieClip;\n\t\t}\n\t}\n\n\n\t/**\n\t * loader listener for asset complete events\n\t */\n\t/*\n\tprivate onLoadError(event: IOErrorEvent):void\n\t{\n\t\tconsole.log(\"LoadError\");\n\t}\n\t*/\n\n\t/**\n\t * loader listener for asset complete events\n\t */\n\tprivate onParseError(event: ParserEvent): void {\n\t\tconsole.log(event.message);\n\t}\n\n\t/**\n\t * loader listener for asset complete events\n\t */\n\tprivate onRessourceComplete(event: LoaderEvent): void {\n\t\tif (this._rootTimeLine) {\n\t\t\tfor (var i:number = 0; i < this._shapes.length; i++) {\n\t\t\t\t//this._shapes[i].material = this._material;\n\t\t\t}\n\n\t\t\tthis._view.setPartition(this._rootTimeLine, new SceneGraphPartition(this._rootTimeLine));\n\t\t\t//console.log(\"LOADING A ROOT name = \" + this._rootTimeLine.name + \" duration=\" + this._rootTimeLine.duration);\n\t\t\tthis._view.scene.addChild(this._rootTimeLine);\n\t\t\t//this._rootTimeLine.x=-this._stage_width/2;\n\t\t\t//this._rootTimeLine.y=-this._stage_height/2;\n\t\t\t// autoplay like in Flash\n\t\t\t//this._rootTimeLine.play();\n\t\t}\n\t}\n\n\tprivate getText(input_string: string): string {\n\t\treturn \"test getText\";\n\t}\n\t/**\n\t * Render loop\n\t */\n\tprivate onEnterFrame(dt: number): void\n\t{\n\t\tvar frameMarker:number = Math.floor(1000/this._fps);\n\n\t\tthis._time += Math.min(dt, frameMarker);\n\n\t\t//if (this._rootTimeLine)\n\t\t//\tthis._rootTimeLine.logHierarchy();\n\t\t//update camera controler\n\t\t// this._cameraController.update();\n\n\n\t\tif (this._time >= frameMarker) {\n\t\t\tthis._time -= frameMarker;\n\n\t\t\tif (this._rootTimeLine != undefined)\n\t\t\t\tthis._rootTimeLine.update();\n\n\t\t\tthis._view.render();\n\t\t}\n\t}\n\n\tprivate onResize(event = null): void\n\t{\n\t\tthis._view.y         = 0;\n\t\tthis._view.x         = 0;\n\t\tthis._view.width     = window.innerWidth;\n\t\tthis._view.height    = window.innerHeight;\n\t\tvar newHeight:number = this._stage_height;\n\t\tthis._projection.fieldOfView = Math.atan(newHeight/1000/2)*360/Math.PI;\n\t\tthis._projection.originX = (0.5 - 0.5*(window.innerHeight/newHeight)*(this._stage_width/window.innerWidth));\n\t}\n\n}\n\nwindow.onload = function () {\n\t(<HTMLElement>document.getElementsByTagName(\"BODY\")[0]).style.overflow=\"hidden\";\n\tnew MathWhizzJS();\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/MathWhizzJS.ts"],"sourceRoot":""}