{"version":3,"sources":["webpack:///./src/Basic_View.ts"],"names":[],"mappings":";;;;;;;;;;AAoCE;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEkH;AACf;AAClC;AACzB;AAE1C;AAgBI;;;AACH;AAAA,oBA6BC;AA3BgB;AACZ,aAAM,QAAG,IAAW;AAEN;AACd,aAAM,MAAO,OAAE,IAAG,CAAK;AACvB,aAAM,MAAO,OAAE,IAAO;AACtB,aAAM,MAAO,OAAO,OAAC,IAAgB;AAEpB;AACjB,aAAe,iBAAG,IAAoB;AAEzB;AACb,aAAO,SAAY,IAAwB,4EAAK,KAAe,gBAAc,uEAAS,UAAK,KAAM,KAAgB;AACjH,aAAM,MAAM,MAAS,SAAK,KAAS;AAEhB;AACjB,eAAS,WAAI,UAAc;AAAK,mBAAI,MAAS,SAAO;AAAC;AAEvD,aAAY;AAEZ,aAAO,SAAG,IAAyB,4EAAK,KAAa,cAAQ;AAC7D,aAAO,OAAS;AAER,2EAAiB,iBAAY,kEAAc,eAAE,UAAkB;AAAK,mBAAI,MAAmB,mBAAO;AAAE;AAEhG;AACJ,2EAAK,KAAC,IAAc,iEACjC;AAAC;AAIE;;;AACK,yBAAY,eAApB,UAA8B;AAEzB,aAAO,OAAU,aAAM;AAEvB,aAAM,MACX;AAAC;AAIE;;;AACK,yBAAkB,qBAA1B,UAA6C;AAE5C,YAAU,SAAsB,MAAQ;AACxC,YAAU,SAAgB,OAAQ;AAE9B,aAAC,IAAK,IAAW,GAAG,IAAS,QAAK,KAAG;AACxC,gBAAS,QAAgB,OAAI;AAEtB,oBAAI,IAAM,MAAK,MAAO,MAAM;AAE5B,oBAAM,MAAO;AACH;AAChB,qBAA+B;AAC1B,yBAAe,eAAQ,UAAG,IAAmB,0EAAwB;AAG5E;;AACD;AAAC;AAIE;;;AACK,yBAAQ,WAAhB,UAAqC;AAApB;AAAA,oBAAoB;;AAEhC,aAAM,MAAE,IAAK;AACb,aAAM,MAAE,IAAK;AACb,aAAM,MAAM,QAAS,OAAY;AACjC,aAAM,MAAO,SAAS,OAC3B;AAAC;AACF,WAAC;AAAA;AAEK,OAAO,SAAG;AAEf,QACD;AAAC,E","file":"js/Basic_View.js","sourcesContent":["/*\n\nBasic 3D scene example in Away3D\n\nDemonstrates:\n\nHow to setup a view and add 3D objects.\nHow to apply materials to a 3D object and dynamically load textures\nHow to create a frame tick that updates the contents of the scene\n\nCode by Rob Bateman\nrob@infiniteturtles.co.uk\nhttp://www.infiniteturtles.co.uk\n\nThis code is distributed under the MIT License\n\nCopyright (c) The Away Foundation http://www.theawayfoundation.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport {LoaderEvent, Vector3D, AssetLibrary, IAsset, URLRequest, RequestAnimationFrame} from \"awayjs-full/lib/core\";\nimport {BitmapImage2D, ElementsType, BasicMaterial, Single2DTexture} from \"awayjs-full/lib/graphics\";\nimport {Sprite, PrimitivePlanePrefab} from \"awayjs-full/lib/scene\";\nimport {View} from \"awayjs-full/lib/view\";\n\nclass Basic_View\n{\n\t//engine variables\n\tprivate _view:View;\n\n\t//material objects\n\tprivate _planeMaterial:BasicMaterial;\n\n\t//scene objects\n\tprivate _plane:Sprite;\n\n\t//tick for frame update\n\tprivate _timer:RequestAnimationFrame;\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor()\n\t{\n\t\t//setup the view\n\t\tthis._view = new View();\n\n\t\t//setup the camera\n\t\tthis._view.camera.z = -600;\n\t\tthis._view.camera.y = 500;\n\t\tthis._view.camera.lookAt(new Vector3D());\n\n\t\t//setup the materials\n\t\tthis._planeMaterial = new BasicMaterial();\n\n\t\t//setup the scene\n\t\tthis._plane = <Sprite> new PrimitivePlanePrefab(this._planeMaterial, ElementsType.TRIANGLE, 700, 700).getNewObject();\n\t\tthis._view.scene.addChild(this._plane);\n\n\t\t//setup the render loop\n\t\twindow.onresize  = (event:UIEvent) => this.onResize(event);\n\n\t\tthis.onResize();\n\n\t\tthis._timer = new RequestAnimationFrame(this.onEnterFrame, this);\n\t\tthis._timer.start();\n\n\t\tAssetLibrary.addEventListener(LoaderEvent.LOAD_COMPLETE, (event:LoaderEvent) => this.onResourceComplete(event));\n\n\t\t//plane textures\n\t\tAssetLibrary.load(new URLRequest(\"assets/floor_diffuse.jpg\"));\n\t}\n\n\t/**\n\t * render loop\n\t */\n\tprivate onEnterFrame(dt:number):void\n\t{\n\t\tthis._plane.rotationY += 1;\n\n\t\tthis._view.render();\n\t}\n\n\t/**\n\t * Listener function for resource complete event on asset library\n\t */\n\tprivate onResourceComplete (event:LoaderEvent)\n\t{\n\t\tvar assets:Array<IAsset> = event.assets;\n\t\tvar length:number = assets.length;\n\n\t\tfor (var c:number = 0; c < length; c++) {\n\t\t\tvar asset:IAsset = assets[c];\n\n\t\t\tconsole.log(asset.name, event.url);\n\n\t\t\tswitch (event.url) {\n\t\t\t\t//plane textures\n\t\t\t\tcase \"assets/floor_diffuse.jpg\" :\n\t\t\t\t\tthis._planeMaterial.texture = new Single2DTexture(<BitmapImage2D> asset);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * stage listener for resize events\n\t */\n\tprivate onResize(event:UIEvent = null):void\n\t{\n\t\tthis._view.y = 0;\n\t\tthis._view.x = 0;\n\t\tthis._view.width = window.innerWidth;\n\t\tthis._view.height = window.innerHeight;\n\t}\n}\n\nwindow.onload = function()\n{\n\tnew Basic_View();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Basic_View.ts"],"sourceRoot":""}